<?xml version="1.0" encoding="ASCII"?>
<checkcatalog:Catalog xmlns:checkcatalog="http://www.eclipse.org/sphinx/check/catalog">
 <categories
      id="SoftwareComponentTemplate"
      label="SoftwareComponentTemplate"/>
  <constraints id="constr_1000" label="constr_1000" message="End-to-end protection is limited to sender/receive communication" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1001" label="constr_1001" description="The value of the EndToEndDescription.dataId shall be unique within the scope of the System." message="Value of EndToEndDescription.dataId shall be unique" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1002" label="constr_1002" description="As the n:1 communication scenario implies that probably not all senders use the same EndToEndDescription.dataId this scenario is explicitly not supported." message="End-to-end protection does not support n:1 communication" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1004" label="constr_1004" description="The same ApplicationDataTypes may be mapped to different  ImplementationDataTypes even in the scope of a single ECU (more exactly speaking, a single RTE), but not in the scope of a  single atomic software component." message="Mapping of ApplicationDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1005" label="constr_1005" description="It is required that ImplementationDataTypes which are taken for connecting corresponding elements of PortInterfaces and thus refer to compatible ApplicationDataTypes are also compatible among each other (so that RTE is able to cope with possible connections by converting the data accordingly)." message="Compatibility of ImplementationDataTypes mapped to the same ApplicationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1006" label="constr_1006" description="Table~table:CategoriesOverview defines the applicable Identifiable.categorys depending on specific model elements related to data definition properties.67107" message="applicable data categories" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1007" label="constr_1007" description="The allowed attributes of SwDataDefProps for ApplicationDataTypes and their allowed multiplicities are listed as an overview in table~table:CategoriesAppl. 67107" message="Allowed attributes of SwDataDefProps for ApplicationDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1008" label="constr_1008" description="The categories ARTechTerm_STRUCTURE and ARTechTerm_ARRAY correspond to ApplicationCompositeDataTypes whereas all other Identifiable.categorys can be applied only for ApplicationPrimitiveDataTypes." message="Applicability of Identifiable.categorys ARTechTerm_STRUCTURE and ARTechTerm_ARRAY" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1009" label="constr_1009" description="A complete list of the SwDataDefProps and other attributes and their multiplicities which are allowed for a given Identifiable.category is shown in table~table:CategoriesImpl." message="SwDataDefProps applicable to ImplementationDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1010" label="constr_1010" description="If BaseTypeDirectDefinition.nativeDeclaration does not exist in the SwBaseType it is required that the Identifiable.shortName (e.g. ``uint8'') of the corresponding ImplementationDataType is equal to a name of one of the Platform or Standard Types predefined in AUTOSAR code." message="If BaseTypeDirectDefinition.nativeDeclaration does not exist" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1011" label="constr_1011" description="For Identifiable.category only the values FIXED_LENGTH and VARIABLE_LENGTH are supported." message="Identifiable.category of SwBaseType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1012" label="constr_1012" description="If the value of the attribute Identifiable.category of SwBaseType is set to FIXED_LENGTH the attribute BaseTypeDirectDefinition.baseTypeSize shall be filled with content and attribute BaseTypeDirectDefinition.maxBaseTypeSize shall not exist." message="Value of Identifiable.category is FIXED_LENGTH" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1013" label="constr_1013" description="If the value of the attribute Identifiable.category of SwBaseType is set to VARIABLE_LENGTH the attribute BaseTypeDirectDefinition.maxBaseTypeSize shall be filled with content and attribute BaseTypeDirectDefinition.baseTypeSize shall not exist." message="Value of Identifiable.category is VARIABLE_LENGTH" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1014" label="constr_1014" description="1C: One's complement" message="Supported value encodings for SwBaseType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1015" label="constr_1015" description="The prioritization and usage of attributes of meta-class SwDataDefProps shall follow the restrictions given in table~table:DataDefPropsUsageDetails." message="Prioritization of SwDataDefProps" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1016" label="constr_1016" description="SwDataDefProps.invalidValue for ImplementationDataType and ImplementationDataTypeElement is restricted to to be either a compatible NumericalValueSpecification, TextValueSpecification (caution, constr_1284 applies) or a ConstantReference that in turn points to a compatible ValueSpecification." message="Restriction of SwDataDefProps.invalidValue for ImplementationDataType and ImplementationDataTypeElement" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1017" label="constr_1017" description="The table~tab:Supported combinations of SwImplPolicy and SwCalibrationAccess defines the supported combinations of SwDataDefProps.swImplPolicy and SwDataDefProps.swCalibrationAccess attribute setting." message="Supported combinations of SwDataDefProps.swImplPolicy and SwDataDefProps.swCalibrationAccess" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1018" label="constr_1018" description="Due to the nature of SenderReceiverInterface.data elements characterized by setting the SwDataDefProps.swImplPolicy to SwImplPolicyEnum.measurementPoint, such SenderReceiverInterface.data elements shall not be referenced by a VariableAccess aggregated by RunnableEntity in the role RunnableEntity.dataReadAccess." message="SwImplPolicyEnum.measurementPoint shall not be referenced by a VariableAccess aggregated by RunnableEntity in the role RunnableEntity.dataReadAccess" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1019" label="constr_1019" description="The SwDataDefProps the input variable shall be compatible to the SwAxisIndividual.datatype resp. SwAxisIndividual.compuMethod resp. SwAxisIndividual.unit of the SwAxisIndividual." message="Compatibility of input value and axis" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1020" label="constr_1020" description="Finally, the ParameterDataPrototype assigned in SwAxisGrouped.swCalprmRef shall be typed by data type compatible to SwAxisGrouped.sharedAxisType." message="ParameterDataPrototype needs to be of compatible data type as referenced in SwAxisGrouped.sharedAxisType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1021" label="constr_1021" description="The forward and inverse direction shall always be clearly determined either by" message="A CompuMethod shall specify instructions for both directions" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1022" label="constr_1022" description="In case that both domains are specified in the CompuMethod both shall have explicitly defined limits." message="Limits shall be defined for each direction of CompuMethod" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1024" label="constr_1024" description="Within AUTOSAR only the stepwise definition (CompuScales) is used." message="Stepwise definition of CompuMethods" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1025" label="constr_1025" description="The rational formula shall not yield any division by zero." message="Avoid division by zero in rational formula" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1026" label="constr_1026" description="For data types or prototypes, units should be referenced from within the associated CompuMethod. But if it is referenced from within SwDataDefProps and/or PhysConstrs (for exceptional use cases) it shall be compatible (for more details please refer to constr_1052) to the ones referenced from the referred CompuMethod." message="Compatibility of Units" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1027" label="constr_1027" description="Because ParameterDataPrototypes have a isOfType-relation to ApplicationDataTypes or ImplementationDataTypes the related data types shall properly match to the details as specified in AutosarDataType.swDataDefProps." message="Types for record layouts" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1029" label="constr_1029" description="It is required that one ConstantSpecification referenced from a ConstantSpecificationMapping needs to be defined in the application domain (ConstantSpecificationMapping.applConstant) and the other referenced ConstantSpecification needs to be defined in the implementation domain (ConstantSpecificationMapping.implConstant)." message="ConstantSpecificationMapping and ConstantSpecification" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1030" label="constr_1030" description="ParameterSwComponentType: here the ConstantSpecificationMappingSet is directly associated by the ParameterSwComponentType." message="ParameterSwComponentType references ConstantSpecificationMappingSet" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1031" label="constr_1031" description="NvBlockSwComponentType: in this case the ConstantSpecificationMappingSet is associated with the aggregated NvBlockDescriptor." message="NvBlockSwComponentType references ConstantSpecificationMappingSet" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1032" label="constr_1032" description="A DelegationSwConnector can only connect PortPrototypes of the same kind, i.e. PPortPrototype to PPortPrototype and RPortPrototype to RPortPrototype." message="DelegationSwConnector can only connect PortPrototypes of the same kind" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1033" label="constr_1033" description="For sender/receiver communication, it is not allowed to create a communication scenario where n sender are connected to m receivers where m and n are both greater than 1." message="Communication scenarios for sender/receiver communication" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1035" label="constr_1035" description="The recursive definition of a CompositionSwComponentType that eventually contains a SwComponentPrototype typed by the same CompositionSwComponentType shall not be feasible." message="Recursive definition of CompositionSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1036" label="constr_1036" description="It shall not be possible to connect PortPrototypes typed by PortInterfaces of different kinds. Subclasses of DataInterface make an exception from this rule and can be used for creating connections to each other." message="Connect kinds of PortInterfaces" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1037" label="constr_1037" description="A client shall not be connected to multiple servers such that an operation call would be handled by more than one server." message="Client shall not be connected to multiple servers" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1038" label="constr_1038" description="A ClientServerOperation.possibleError referenced by a ClientServerOperation shall be owned by the ClientServerInterface that also owns the ClientServerOperation." message="Reference to ApplicationError" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1039" label="constr_1039" description="It is not possible to define a mapping between an element where the SwDataDefProps.swImplPolicy is set to SwImplPolicyEnum.queued and an other element where the SwDataDefProps.swImplPolicy is set differently." message="Relevance of SwDataDefProps.swImplPolicy" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1040" label="constr_1040" description="Either the AutosarDataTypes of the referred DataPrototypes are compatible as described in chapter~chap:Compatibility_of_Data_Types or a conversion of the data as described in chapter ~chap:Data Conversion is available." message="Conversion of SenderReceiverInterfaces" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1041" label="constr_1041" description="Either the AutosarDataTypes of the referred ArgumentDataPrototypes are compatible as described in chapter~chap:Compatibility_of_Data_Types or a conversion of the data as described in chapter~chap:Data Conversion is available." message="Conversion of ClientServerInterfaces" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1043" label="constr_1043" description="The allowed combinations of a specific kind of PortInterface and a kind of ComSpec are documented in Table~table:Port_Interface_vs_Com_Spec." message="PortInterface vs. ComSpec" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1044" label="constr_1044" description="According to the origin of DataFilter, i.e. OSEK COM 3.0.3 specification~OSEK-COM, DataFilters can only be applied to values with an integer base type." message="Applicability of DataFilter" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1045" label="constr_1045" description="The supported value encodings for the usage within a PortInterface are:" message="Supported value encodings for SwBaseType in the context of PortInterfaces" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1046" label="constr_1046" description="constr_1045 applies only if the value of the attribute PortInterface.isService is set to false." message="Applicability of constr_1045" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1047" label="constr_1047" description="Instances of ApplicationPrimitiveDataType are compatible if and only if one of the following conditions applies:" message="Compatibility of ApplicationPrimitiveDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1048" label="constr_1048" description="Instances of ApplicationRecordDataTypes are compatible if and only if one of the following conditions applies:" message="Compatibility of ApplicationRecordDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1049" label="constr_1049" description="Instances of ApplicationArrayDataType are compatible if and only if one of the following conditions applies:" message="Compatibility of ApplicationArrayDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1050" label="constr_1050" description="Instances of ImplementationDataType are compatible if and only if after all type-references are resolved one of the following rules apply:" message="Compatibility of ImplementationDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1051" label="constr_1051" description="SwDataDefProps are compatible if and only if:" message="Compatibility of SwDataDefProps" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1052" label="constr_1052" description="Two Unit definitions are compatible if and only if:" message="Compatibility of Units" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1053" label="constr_1053" description="Two PhysicalDimension definitions are compatible if and only if the values of" message="Compatibility of PhysicalDimensions" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1054" label="constr_1054" description="If the provider defines no constraints it is only compatible with a receiver which also defines no constraints at all." message="No DataConstr available at the provider" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1055" label="constr_1055" description="The attributes SwDataDefProps.baseType shall refer to a compatible SwBaseType" message="ImplementationDataType has Identifiable.categoryARTechTerm_VALUE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1056" label="constr_1056" description="The ImplementationDataTypes referenced by the attributes SwDataDefProps.SwDataDefProps.implementationDataType shall be compatible ." message="ImplementationDataType has Identifiable.categoryARTechTerm_TYPE_REFERENCE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1057" label="constr_1057" description="The attributes SwDataDefProps.SwDataDefProps.swPointerTargetProps shall have identical SwPointerTargetProps.targetCategory and shall refer to SwDataDefProps where all  attributes are identical" message="ImplementationDataType has Identifiable.categoryARTechTerm_DATA_REFERENCE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1058" label="constr_1058" description="The attributes SwDataDefProps.SwDataDefProps.swPointerTargetProps.SwPointerTargetProps.functionPointerSignature shall refer to BswModuleEntrys which each resolve to the same function signature." message="ImplementationDataType has Identifiable.categoryARTechTerm_FUNCTION_REFERENCE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1059" label="constr_1059" description="An ApplicationDataType of Identifiable.categoryARTechTerm_VALUE can only be mapped/connected to an ImplementationDataType which also has Identifiable.categoryARTechTerm_VALUE." message="Compatibility of data types with Identifiable.categoryARTechTerm_VALUE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1060" label="constr_1060" description="An ApplicationDataType of Identifiable.categoryARTechTerm_ARRAY, ARTechTerm_VAL_BLK can only be mapped/connected to an ImplementationDataType of Identifiable.categoryARTechTerm_ARRAY." message="Compatibility of data types with Identifiable.categoryARTechTerm_ARRAY, ARTechTerm_VAL_BLK" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1061" label="constr_1061" description="An ApplicationDataType of Identifiable.categoryARTechTerm_STRUCTURE can only be mapped/connected to an ImplementationDataType of Identifiable.categoryARTechTerm_STRUCTURE." message="Compatibility of data types with Identifiable.categoryARTechTerm_STRUCTURE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1063" label="constr_1063" description="An ApplicationDataType of Identifiable.categoryARTechTerm_BOOLEAN can only be mapped/connected to an ImplementationDataType of Identifiable.categoryARTechTerm_VALUE." message="Compatibility of data types with Identifiable.categoryARTechTerm_BOOLEAN" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1064" label="constr_1064" description="An ApplicationDataType of Identifiable.categoryARTechTerm_COM_AXIS, ARTechTerm_RES_AXIS, ARTechTerm_CURVE, ARTechTerm_MAP, ARTechTerm_CUBOID, ARTechTerm_CUBE_4, or ARTechTerm_CUBE_5 can only be mapped/connected to an ImplementationDataType of Identifiable.categoryARTechTerm_STRUCTURE or ARTechTerm_ARRAY." message="Compatibility of data types with Identifiable.categoryARTechTerm_COM_AXIS, ARTechTerm_RES_AXIS, ARTechTerm_CURVE, ARTechTerm_MAP, ARTechTerm_CUBOID, ARTechTerm_CUBE_4, or ARTechTerm_CUBE_5" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1066" label="constr_1066" description="An ApplicationDataType shall never be mapped to an ImplementationDataType of of Identifiable.categoryARTechTerm_UNION, ARTechTerm_DATA_REFERENCE, or ARTechTerm_FUNCTION_REFERENCE." message="Forbidden mappings to ImplementationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1068" label="constr_1068" description="Two VariableDataPrototypes or ParameterDataPrototypes of ApplicationPrimitiveDataTypes or ImplementationDataTypes of Identifiable.categoryARTechTerm_VALUE, ARTechTerm_BOOLEAN, or ARTechTerm_STRING are compatible if and only if one of the following conditions applies:" message="Compatibility of VariableDataPrototypes or ParameterDataPrototypes typed by primitive data types" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1069" label="constr_1069" description="PortPrototypes of different DataInterfaces are compatible if and only if" message="Compatibility of PortPrototypes of different DataInterfaces in the context of AssemblySwConnectors" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1070" label="constr_1070" description="PortPrototypes of different DataInterfaces are compatible if and only if" message="Compatibility of PortPrototypes of different DataInterfaces in the context of DelegationSwConnectors" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1071" label="constr_1071" description="Combinations of ParameterDataPrototype and VariableDataPrototype used in PortPrototypes typed by various kinds of PortInterfaces shall only be allowed where Table tab:Overview of compatibility of ParameterDataPrototype and VariableDataPrototype contains the value ``yes''." message="compatibility of ParameterDataPrototype and VariableDataPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1072" label="constr_1072" description="PortPrototypes of different ModeSwitchInterfaces are compatible if and only if" message="Compatibility of ModeSwitchInterfaces in the context of an AssemblySwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1073" label="constr_1073" description="PortPrototypes of different ModeSwitchInterfaces are compatible if and only if" message="Compatibility of ModeSwitchInterfaces in the context of an DelegationSwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1074" label="constr_1074" description="ModeDeclarationGroupPrototypes are compatible if and only if one of the following conditions applies:" message="Compatibility of ModeDeclarationGroupPrototypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1075" label="constr_1075" description="ModeDeclarationGroups are compatible if and only if one of the following conditions applies:" message="Compatibility of ModeDeclarationGroups" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1076" label="constr_1076" description="Two ArgumentDataPrototypes are compatible if and only if" message="Compatibility of ArgumentDataPrototypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1077" label="constr_1077" description="Two ApplicationErrors are compatible if and only if one of the following conditions applies:" message="Compatibility of ApplicationErrors" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1078" label="constr_1078" description="Two ClientServerOperations are compatible if their signatures match. In particular, they are compatible if and only if" message="Compatibility of ClientServerOperations" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1079" label="constr_1079" description="ClientServerInterfaces are compatible if and only if" message="Compatibility of ClientServerInterfaces in the context of an AssemblySwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1080" label="constr_1080" description="ClientServerInterfaces are compatible if and only if" message="Compatibility of ClientServerInterfaces in the context of an DelegationSwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1081" label="constr_1081" description="TriggerInterfaces are compatible if and only if" message="Compatibility of TriggerInterfaces in the context of an AssemblySwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1082" label="constr_1082" description="TriggerInterfaces are compatible if and only if all of the following conditions apply:" message="Compatibility of TriggerInterfaces in the context of an DelegationSwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1083" label="constr_1083" description="Triggers are compatible if they have an identical Referrable.shortName." message="Compatibility of Triggers" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1084" label="constr_1084" description="The delegation of a provided outer PortPrototype is properly defined if the following criteria are fulfilled:" message="delegation of a provided outer PortPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1085" label="constr_1085" description="PortPrototypes of different SenderReceiverInterfaces, NvDataInterfaces, and ParameterInterfaces are compatible if and only if for at least one VariableDataPrototype or ParameterDataPrototype defined in the context of the  SenderReceiverInterface, NvDataInterface, or ParameterInterface of the RPortPrototype a compatible VariableDataPrototype or ParameterDataPrototype exists in the SenderReceiverInterface, NvDataInterface, or ParameterInterface of the provided PortPrototype. &#xA;&#x9;&#xA;The compatibility  of PortInterface elements depends on the kind of PortInterface and the SwDataDefProps.swImplPolicy attributes of the PortInterface elements." message="Compatibility in the case of a flat ECU extract" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1086" label="constr_1086" description="Each pair of PortPrototypes can only be connected by one and only one SwConnector." message="SwConnector between two specific PortPrototypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1087" label="constr_1087" description="An AssemblySwConnector can only connect PortPrototypes of SwComponentPrototypes that are owned by the same CompositionSwComponentType" message="AssemblySwConnector inside CompositionSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1088" label="constr_1088" description="A DelegationSwConnector can only connect a PortPrototype of a SwComponentPrototype that is owned by the same CompositionSwComponentType that also owns the connected delegation PortPrototype." message="DelegationSwConnector inside CompositionSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1090" label="constr_1090" description="A single RunnableEntity can actually wait only at a single WaitPoint provided that the RunnableEntity can only be scheduled a single timeThis constraint is valid at least in the OSEK standard where an extended task (that can have wait points) can only exist a single time in the context of the scheduler.." message="WaitPoint and RunnableEntity" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1091" label="constr_1091" description="The only RTEEvents that are qualified for unblocking a WaitPoint are:" message="RTEEvents that can unblock a WaitPoint" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1092" label="constr_1092" description="A ParameterSwComponentType shall never aggregate a SwcInternalBehavior and also owns exclusively PPortPrototypes of type ParameterInterface." message="ParameterSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1093" label="constr_1093" description="An ApplicationPrimitiveDataType of Identifiable.categoryARTechTerm_STRING shall have a SwDataDefProps.swTextProps which determines the ImplementationDataTypeElement.arraySizeSemantics and SwTextProps.swMaxTextSize." message="Definition of textual strings" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1095" label="constr_1095" description="If the value of NvBlockNeeds.nDataSets is greater than 0 the value of NvBlockNeeds.reliability shall not be set to NvBlockNeedsReliabilityEnum.errorCorrection." message="Values of NvBlockNeeds.nDataSets vs. NvBlockNeeds.reliability" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1096" label="constr_1096" description="A RunnableEntity that has a WaitPoint shall not be referenced by a SwcModeSwitchEvent." message="SwcModeSwitchEvent and WaitPoint" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1097" label="constr_1097" description="A RunnableEntity that has a WaitPoint shall not be referenced by a RTEEvent that has a reference in the role RTEEvent.disabledMode." message="RunnableEntity that has a WaitPoint" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1098" label="constr_1098" description="A SwcModeSwitchEvent shall not simultaneously reference to the same ModeDeclaration in both the roles SwcModeSwitchEvent.mode and RTEEvent.disabledMode." message="Mode switch and mode disabling" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1100" label="constr_1100" description="For any element in an unconnected RPortPrototype typed by a DataInterface there shall be a RPortPrototype.requiredComSpec that defines an NonqueuedReceiverComSpec.initValue." message="Unconnected RPortPrototype typed by a DataInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1101" label="constr_1101" description="An RPortPrototype typed by ModeSwitchInterface shall not be referenced by more than one SwConnector." message="Mode-related communication" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1102" label="constr_1102" description="A SwComponentType may have PortPrototypes typed by different PortInterfaces with&#xA;equal Referrable.shortName but conflicting ApplicationErrors." message="ApplicationError in the scope of one SwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1103" label="constr_1103" description="A NonqueuedReceiverComSpec that has attribute NonqueuedReceiverComSpec.enableUpdate set to true may not reference a SenderReceiverInterface.dataElement that in turn is referenced by a VariableAccess in the role RunnableEntity.dataReadAccess." message="NonqueuedReceiverComSpec and NonqueuedReceiverComSpec.enableUpdate" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1104" label="constr_1104" description="An RPortPrototype typed by a TriggerInterface shall not be referenced by more than one SwConnectors that are in turn referencing PPortPrototypes typed by TriggerInterfaces that contain Triggers with the same Referrable.shortName." message="Trigger sink and trigger source" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1105" label="constr_1105" description="The value of the attribute ImplementationDataTypeElement.arraySize of an ImplementationDataTypeElement owned by an ImplementationDataType or ImplementationDataTypeElement of Identifiable.categoryARTechTerm_ARRAY shall be greater than 0." message="Value of ImplementationDataTypeElement.arraySize" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1106" label="constr_1106" description="An ImplementationDataType or ImplementationDataTypeElement of Identifiable.categoryARTechTerm_STRUCTURE shall own at least one ImplementationDataTypeElement." message="Structure shall have at least one element" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1107" label="constr_1107" description="An ImplementationDataType or ImplementationDataTypeElement of Identifiable.categoryARTechTerm_UNION shall own at least one ImplementationDataTypeElement." message="Union shall have at least one element" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1108" label="constr_1108" description="The value of ApplicationError.ApplicationError.errorCode shall not exceed the closed interval 1 .. 63. The following exception applies: only in case ClientServerInterface.possibleError is supposed to represent E_OK the value 0 shall be be allowed." message="Value of ApplicationError.ApplicationError.errorCode" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1109" label="constr_1109" description="A SwComponentPrototype typed by a SensorActuatorSwComponentType needs to be mapped and run on exactly that ECU that contains the HwElement corresponding to the HwType that its SensorActuatorSwComponentType refers to in case it accesses the hardware via the I/O hardware abstraction layer." message="Mapping of SwComponentPrototypes typed by a SensorActuatorSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1110" label="constr_1110" description="The attribute Identifiable.category of EndToEndDescription can have the following values:" message="Value of Identifiable.category in EndToEndDescription" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1111" label="constr_1111" description="In PROFILE_01, there shall be only one element in the set and the applicable range of values is [0~..~65535]." message="Constraints of EndToEndDescription.dataId in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1112" label="constr_1112" description="In PROFILE_01, the applicable range of values for dataIdMode is [0~..~3]." message="Constraints of EndToEndDescription.dataIdMode in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1113" label="constr_1113" description="In PROFILE_01, the following attributes shall exist:" message="Existence of attributes in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1114" label="constr_1114" description="In PROFILE_01, the applicable range of values for EndToEndDescription.crcOffset is [0~..~65535]. For the value of this attribute the constraint value~mod~4~=~0 applies." message="Constraints of EndToEndDescription.crcOffset in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1115" label="constr_1115" description="In PROFILE_01, the applicable range of values for EndToEndDescription.counterOffset is [0~..~65535]. For the value of this attribute the constraint value~mod~4~=~0 applies." message="Constraints of EndToEndDescription.counterOffset in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1116" label="constr_1116" description="In PROFILE_01, the applicable range of values for EndToEndDescription.dataLength is [0~..~240]. For the value of this attribute the constraint value~mod~8~=~0 applies." message="Constraints of EndToEndDescription.dataLength in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1117" label="constr_1117" description="In PROFILE_01, the applicable range of values for EndToEndDescription.EndToEndDescription.maxDeltaCounterInit and ReceiverComSpec.ReceiverComSpec.maxDeltaCounterInit is [0~..~14]." message="Constraints of EndToEndDescription.maxDeltaCounterInit in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1118" label="constr_1118" description="In PROFILE_02, only the following attributes shall exist:" message="Existence of attributes in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1119" label="constr_1119" description="In PROFILE_02, the applicable range of values for EndToEndDescription.dataLength is [0~..~65535]. For the value of this attribute the constraint value~mod~8~=~0 applies." message="Constraints of EndToEndDescription.dataLength in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1120" label="constr_1120" description="In PROFILE_02, there shall be exactly ordered 16 elements in the set and the applicable range of values is [0~..~255]." message="Constraints of EndToEndDescription.dataId in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1121" label="constr_1121" description="In PROFILE_02, the applicable range of values for EndToEndDescription.EndToEndDescription.maxDeltaCounterInit and ReceiverComSpec.ReceiverComSpec.maxDeltaCounterInit is [0~..~15]." message="Constraints of EndToEndDescription.maxDeltaCounterInit in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1126" label="constr_1126" description="The DataConstr (e.g. the limits) defined by the type of the providing data element shall be within the constraints defined by the type of the requiring data element." message="Compatibility of DataConstrs" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1128" label="constr_1128" description="If two or more OperationInvokedEvents reference a single RunnableEntity the value of the ServerComSpec attribute ServerComSpec.queueLength shall be identical for all ServerComSpecs owned by PPortPrototypes of the enclosing SwComponentType that reference one of the ClientServerOperations that are also referenced by the OperationInvokedEvents." message="Queue length of ClientServerOperations associated with the same RunnableEntity" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1129" label="constr_1129" description="The attribute SwDataDefProps.swImplPolicy of a SenderReceiverInterface.dataElement referenced by a NonqueuedReceiverComSpecshall not be set to the value SwImplPolicyEnum.queued." message="SwDataDefProps.swImplPolicy and NonqueuedReceiverComSpec" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1130" label="constr_1130" description="The attribute SwDataDefProps.swImplPolicy of a SenderReceiverInterface.dataElement referenced by a QueuedReceiverComSpecshall be set to the value SwImplPolicyEnum.queued." message="SwDataDefProps.swImplPolicy and QueuedReceiverComSpec" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1131" label="constr_1131" description="The attribute SwDataDefProps.swImplPolicy of a SenderReceiverInterface.dataElement referenced by a NonqueuedSenderComSpecshall not be set to the value SwImplPolicyEnum.queued." message="SwDataDefProps.swImplPolicy and NonqueuedSenderComSpec" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1132" label="constr_1132" description="The attribute SwDataDefProps.swImplPolicy of a SenderReceiverInterface.dataElement referenced by a QueuedSenderComSpecshall be set to the value SwImplPolicyEnum.queued." message="SwDataDefProps.swImplPolicy and QueuedSenderComSpec" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1133" label="constr_1133" description="In a CompuMethod that is subject to constr_1146, allCompuScales that yield identical CompuScale Symbolic Names shall have the same range defined by CompuScale.CompuScale.lowerLimit and CompuScale.CompuScale.upperLimit." message="Identical CompuScale Symbolic Names shall have the same range" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1134" label="constr_1134" description="CompuMethod.physConstr is not allowed. CompuMethod.compuInternalToPhys shall exist with CompuScales.compuScales consisting of CompuScale.upperLimit and CompuScale.lowerLimit." message="Allowed structure of ARTechTerm_TEXTTABLE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1135" label="constr_1135" description="The separator is ``|'' and is forbidden in CompuConstTextContent.vt therefore." message="Limit of CompuConstTextContent.vt in ARTechTerm_BITFIELD_TEXTTABLE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1137" label="constr_1137" description="A PPortPrototype typed by a ParameterInterface can only be owned by a ParameterSwComponentType." message="Applicability of ParameterInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1138" label="constr_1138" description="The existence of an RoleBasedPortAssignment.assignedPort in combination with a DiagEventDebounceAlgorithm shall only be respected for the concrete subclass DiagEventDebounceMonitorInternal." message="RoleBasedPortAssignment.assignedPort and DiagEventDebounceMonitorInternal" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1139" label="constr_1139" description="Concerning the debouncing, the software-component acts as a client and thus the RoleBasedPortAssignment.assignedPort defined with respect to a DiagEventDebounceMonitorInternal may only refer to an RPortPrototype. The standardized value of the RoleBasedPortAssignment.role identifier of the RoleBasedPortAssignment.assignedPort shall be DiagFaultDetectionCounterPort." message="RoleBasedPortAssignment.assignedPort of DiagEventDebounceMonitorInternal shall refer to an RPortPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1140" label="constr_1140" description="The combination of setting the attribute InvalidationPolicy.handleInvalid of the meta-class InvalidationPolicy owned by SenderReceiverInterface to value replaceand of setting the value of the attribute NonqueuedReceiverComSpec.initValue owned by a corresponding NonqueuedReceiverComSpec effectively to the value of the SwDataDefProps.invalidValue (owned by a corresponding SwDataDefProps) is not supported." message="Combination of SwDataDefProps.invalidValue with the attribute InvalidationPolicy.handleInvalid" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1141" label="constr_1141" description="The attribute VariableAccess.scope of meta-class VariableAccess shall only be applied with respect to the aggregation of VariableAccess in the following roles:" message="Applicability of the VariableAccess.scope attribute" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1142" label="constr_1142" description="In contrast to the general rule that Identifiable.category can be extended by user-specific values it is not allowed to extend the meaning of the attribute Identifiable.category of meta-class CompuMethod" message="Identifiable.category of CompuMethod shall not be extended" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1143" label="constr_1143" description="In contrast to the general rule that Identifiable.category can be extended by user-specific values it is not allowed to extend the meaning of the attribute Identifiable.category of meta-class AutosarDataType" message="Identifiable.category of AutosarDataType shall not be extended" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1144" label="constr_1144" description="The attribute SensorActuatorSwComponentType.sensorActuator of SensorActuatorSwComponentType, the attribute EcuAbstractionSwComponentType.hardwareElement of EcuAbstractionSwComponentType, and the attribute ComplexDeviceDriverSwComponentType.hardwareElement of ComplexDeviceDriverSwComponentType may only reference a HwType. References to other subclasses of HwDescriptionEntity are not allowed." message="SensorActuatorSwComponentType, EcuAbstractionSwComponentType, and ComplexDeviceDriverSwComponentType may only reference a HwType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1146" label="constr_1146" description="The CompuScale.symbol attribute shall only be provided for CompuScales where the Identifiable.category of the enclosing CompuMethod is one of the following:" message="Applicability of a symbol for a CompuScale in C code" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1147" label="constr_1147" description="The following values of the attribute Identifiable.category of meta-class PortGroup are reserved by the AUTOSAR standard:" message="Standardized values for the attribute Identifiable.category of meta-class PortGroup" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1148" label="constr_1148" description="PortInterfaces of PortPrototypes used to connect to NvBlockSwComponentTypes as well as the PortInterfaces used in the context of NvBlockSwComponentTypes shall always set the value of the attribute PortInterface.isService to false." message="PortInterfaces of PortPrototypes used to connect to NvBlockSwComponentTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1149" label="constr_1149" description="A PortPrototype typed by a ClientServerInterface used for NV data management, i.e. the interaction of ApplicationSwComponentTypes with NvBlockSwComponentTypes, shall be typed by ClientServerInterfaces that are compatible to the particular ClientServerInterfaces derived from MOD_GeneralBlueprints~MOD-GeneralBlueprints. constr_1148 applies." message="PortPrototypes used for NV data management" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1150" label="constr_1150" description="The PortDefinedArgumentValue.valueType (typically this boils down to integer values used to specify an ``id'') associated with PortDefinedArgumentValue shall be of Identifiable.categoryVALUE or TYPE_REFERENCE. The latter case is only supported if the value of Identifiable.category of the target data type is set to VALUE." message="Usage of PortDefinedArgumentValue.valueType for PortDefinedArgumentValue" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1151" label="constr_1151" description="A PortInterfaceMapping is only applicable and valid for a SwConnector if the two PortPrototypes which are referenced by the SwConnector are typed by the same two PortInterfaces which are mapped by the PortInterfaceMapping." message="Applicability of PortInterfaceMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1152" label="constr_1152" description="The value of Identifiable.category of an ApplicationArrayElement shall always be identical to the value of Identifiable.category of the AutosarDataType referenced by the ApplicationArrayElement." message="Identifiable.category of ApplicationArrayElement and AutosarDataType referenced in the role DataPrototype.type shall be kept in sync" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1153" label="constr_1153" description="Compatibility requirements for CompuScales shall only apply for CompuScales where the Identifiable.category of the enclosing CompuMethod is one of the following:" message="Applicability of compatibility requirements for CompuScales" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1154" label="constr_1154" description="For sender-receiver communication and similar use cases, it is required that the set of CompuScales defined in the CompuMethod of the provider of the communication (i.e. on the side of the PPortPrototype) shall be a subset of the set of CompuScales defined in the CompuMethod on the required side (i.e. on the side of the RPortPrototype)." message="Compatibility of CompuScales for sender-receiver communication and similar use cases" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1155" label="constr_1155" description="For client-server communication, the following rules apply:" message="Compatibility of CompuScales for client-server communication" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1156" label="constr_1156" description="CompuScales which contribute to tabular conversion by having a CompuScaleConstantContents.compuConst are compatible if and only if&#xA;the ``names'' of the CompuScales.compuScales, (namely CompuScale.shortLabel, CompuScaleConstantContents.compuConst and CompuScale.symbol) are equal.&#xA;If the scale has no CompuScaleConstantContents.compuConst, ``names'' of CompuScales are not relevant for compatibility." message="Relevance of ``names'' of CompuScales" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1157" label="constr_1157" description="The constraints constr_1154,  constr_1155, and constr_1156 shall only apply in the absence of a TextTableMapping which shall take precedence regarding the compatibility if it exists." message="Applicability of constraints of CompuScales" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1158" label="constr_1158" description="The definition of the reference ImplementationDataType.ImplementationDataType.swDataDefProps.SwDataDefProps.compuMethod is restricted to a CompuMethod of either Identifiable.categoryARTechTerm_BITFIELD_TEXTTABLE or Identifiable.categoryARTechTerm_TEXTTABLE (these might be seen as implementation specific in certain cases)." message="Applicable Identifiable.categorys for attribute ImplementationDataType.ImplementationDataType.swDataDefProps.SwDataDefProps.compuMethod" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1159" label="constr_1159" description="Within one VariableAndParameterInterfaceMapping all VariableAndParameterInterfaceMapping.firstDataPrototypes shall belong to one and only one DataInterface and all  VariableAndParameterInterfaceMapping.secondDataPrototypes shall belong to one other and only one other DataInterface." message="Consistency of VariableAndParameterInterfaceMapping with respect to the referenced DataInterfaces" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1160" label="constr_1160" description="For Compound Primitive Data Types (see TPS_SWCT_01179) where the size is subject to variation the size of the specified initValues shall match the range of the involved SwSystemconst." message="Size of Compound Primitive Data Type is variant" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1161" label="constr_1161" description="The Ref.index attribute of Ref is limited to a given set if use cases as there are:" message="Applicability of the Ref.index attribute of Ref" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1162" label="constr_1162" description="Two SwRecordLayout definitions are compatible if and only if all attributes except" message="Compatibility of SwRecordLayouts" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1163" label="constr_1163" description="Two CompuMethod definitions are compatible if and only if all attributes except" message="Compatibility of CompuMethods" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1164" label="constr_1164" description="The number of owned RunnableEntityArguments in the role RunnableEntity.argument of a given RunnableEntity shall be identical to the number of applicable PortAPIOption.portArgValues of the PortAPIOption that references the PortPrototype that in turn is referenced by the OperationInvokedEvent that references the RunnableEntityplus the number of ArgumentDataPrototypes aggregated in the role RunnableEntity.argument by the ClientServerOperation referenced by said OperationInvokedEvent." message="Number of ClientServerOperation.arguments owned by a RunnableEntity" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1165" label="constr_1165" description="The existence of a RunnableEntityArgument is limited to RunnableEntitys triggered by a ClientServerOperation." message="Applicability of RunnableEntityArgument" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1166" label="constr_1166" description="For every ModeDeclarationGroup referenced by a ModeDeclarationGroupPrototype used in a PortPrototype typed by a ModeSwitchInterface a ModeRequestTypeMap shall exist that points to the ModeDeclarationGroup and also to an eligible ImplementationDataType." message="Restrictions of ModeRequestTypeMap" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1167" label="constr_1167" description="The ImplementationDataType referenced by a ModeRequestTypeMap shall either be&#xA;of Identifiable.categoryARTechTerm_VALUEor of Identifiable.categoryARTechTerm_TYPE_REFERENCE that in turn references an ImplementationDataType of Identifiable.categoryARTechTerm_VALUE." message="ImplementationDataTypes used as ModeRequestTypeMap.ModeRequestTypeMap.implementationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1168" label="constr_1168" description="Both ImplementationDataTypes shall fulfill constr_1167." message="Compatibility of ImplementationDataTypes used used in the ModeRequestTypeMap" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1169" label="constr_1169" description="The only allowed values for the attribute Trigger.Trigger.swImplPolicy are either STANDARD (in which case the Trigger processing does not use a queue) or QUEUED (in which case the processing of Triggers positively uses a queue)." message="Allowed values for Trigger.Trigger.swImplPolicy" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1170" label="constr_1170" description="If EndToEndProtection.EndToEndProtection.endToEndProtectionVariablePrototype.EndToEndProtectionVariablePrototype.receiver is identical to the RPortPrototype.AbstractRequiredPortPrototype.requiredComSpec.ReceiverComSpec.dataElementandRPortPrototype.AbstractRequiredPortPrototype.requiredComSpec.ReceiverComSpec.maxDeltaCounterInit is defined then the value of RPortPrototype.AbstractRequiredPortPrototype.requiredComSpec.ReceiverComSpec.maxDeltaCounterInitshall be preferred over the value of EndToEndProtection.EndToEndProtection.endToEndProfile.EndToEndDescription.maxDeltaCounterInit." message="Interpretation of attribute EndToEndDescription.maxDeltaCounterInit owned by EndToEndDescription" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1171" label="constr_1171" description="If EndToEndProtection.EndToEndProtection.endToEndProtectionVariablePrototype.EndToEndProtectionVariablePrototype.receiver is identical to the RPortPrototype.AbstractRequiredPortPrototype.requiredComSpec.ReceiverComSpec.dataElementandRPortPrototype.AbstractRequiredPortPrototype.requiredComSpec.ReceiverComSpec.maxDeltaCounterInit is defined then the value of RPortPrototype.AbstractRequiredPortPrototype.requiredComSpec.EndToEndDescription.maxDeltaCounterInitshall be preferred over the value of EndToEndProtection.EndToEndProtection.endToEndProfile.EndToEndDescription.maxDeltaCounterInit." message="Interpretation of attribute EndToEndDescription.maxDeltaCounterInit of EndToEndDescription" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1172" label="constr_1172" description="The only allowed values of ModeDeclarationGroupPrototype.swCalibrationAccess aggregated by ModeDeclarationGroupPrototype are SwCalibrationAccessEnum.notAccessible and SwCalibrationAccessEnum.readOnly." message="Allowed values of SwCalibrationAccessEnum for ModeDeclarationGroupPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1173" label="constr_1173" description="A reference from AutosarParameterRef to VariableDataPrototype is only applicable if the AutosarParameterRef is used in the context of SwAxisGrouped." message="Applicability of AutosarParameterRef referencing a VariableDataPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1174" label="constr_1174" description="CompositionSwComponentTypes shall not own PortPrototypes typed by PortInterfaces where the attribute PortInterface.isService is set to true." message="PortInterfaces used in the context of CompositionSwComponentTypes cannot refer to AUTOSAR services" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1175" label="constr_1175" description="As a CompuMethod specifies the conversion between the physical world and the numerical values they shall refer to a CompuMethod.unit unless the CompuMethod's Identifiable.category is one of ARTechTerm_TEXTTABLE, ARTechTerm_BITFIELD_TEXTTABLE, or ARTechTerm_IDENTICAL." message="Depending on its Identifiable.category, CompuMethod shall refer to a CompuMethod.unit" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1176" label="constr_1176" description="CompuScales of Identifiable.categoryARTechTerm_LINEAR and ARTechTerm_RAT_FUNC are considered compatible if they yield the same conversion." message="Compatibility of CompuScales of Identifiable.categoryARTechTerm_LINEAR and ARTechTerm_RAT_FUNC" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1177" label="constr_1177" description="The value of SwPointerTargetProps.targetCategory for SwPointerTargetProps can only be one of&#xA;ARTechTerm_TYPE_REFERENCE or ARTechTerm_FUNCTION_REFERENCE. The only exception from this rule applies if the SwPointerTargetProps.swDataDefProps owned by the SwPointerTargetProps refers to a SwBaseType with native type declaration void, in this case the value ARTechTerm_VALUE is also permitted." message="Allowed SwPointerTargetProps.targetCategory for SwPointerTargetProps" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1178" label="constr_1178" description="For the sake of removing possible sources of ambiguity, SwDataDefProps used in the context of ImplementationDataType can only have one of" message="Existence of attributes of SwDataDefProps in the context of ImplementationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1181" label="constr_1181" description="The numerical values used to define the ModeDeclaration.value attributes and the ModeDeclarationGroup.onTransitionValue attribute of a ModeDeclarationGroup shall not overlap." message="Numerical values used in ModeDeclaration.ModeDeclaration.value and ModeDeclarationGroup.ModeDeclarationGroup.onTransitionValue" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1182" label="constr_1182" description="The only allowed values for the attribute SwDataDefProps.swImplPolicy of meta-class InternalTriggeringPoint are either STANDARD (in which case the processing of the internal triggering does not use a queue) or QUEUED (in which case the processing of internal triggering positively uses a queue)." message="Allowed values for InternalTriggeringPoint.SwDataDefProps.swImplPolicy" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1183" label="constr_1183" description="All EndToEndProtectionVariablePrototypes aggregated by the same EndToEndProtection shall refer to the identical EndToEndProtectionVariablePrototype.sender." message="EndToEndProtectionVariablePrototypes aggregated by EndToEndProtection" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1184" label="constr_1184" description="The ApplicationCompositeElementInPortInterfaceInstanceRef.rootDataPrototype referenced by ApplicationCompositeElementInPortInterfaceInstanceRef shall be owned by the applicable subclass of DataInterface referenced in the role ApplicationCompositeElementInPortInterfaceInstanceRef.base. This implies that the ApplicationCompositeElementInPortInterfaceInstanceRef.rootDataPrototype shall be a ParameterDataPrototype if the ApplicationCompositeElementInPortInterfaceInstanceRef.base is a ParameterInterface. Otherwise the ApplicationCompositeElementInPortInterfaceInstanceRef.rootDataPrototype shall be a VariableDataPrototype." message="Consistency of ApplicationCompositeElementInPortInterfaceInstanceRef.rootDataPrototype and base in the context of  ApplicationCompositeElementInPortInterfaceInstanceRef" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1185" label="constr_1185" description="The definition of attributes ApplicationCompositeElementInPortInterfaceInstanceRef.contextDataPrototype and ApplicationCompositeElementInPortInterfaceInstanceRef.targetDataPrototype shall (via the type-prototype pattern) be enclosed in the context of the definition of the data type used to type ApplicationCompositeElementInPortInterfaceInstanceRef.rootDataPrototype." message="Consistency of data types in the context of  ApplicationCompositeElementInPortInterfaceInstanceRef" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1186" label="constr_1186" description="The definition of attributes ArVariableInImplementationDataInstanceRef.contextDataPrototype and ArVariableInImplementationDataInstanceRef.targetDataPrototype shall be enclosed in the context of the definition of the data type used to type ArVariableInImplementationDataInstanceRef.rootDataPrototype." message="Consistency of data types in the context of  ArVariableInImplementationDataInstanceRef" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1187" label="constr_1187" description="DataPrototypes of ApplicationCompositeDataTypes or ImplementationDataTypes of Identifiable.categoryARTechTerm_STRUCTURE or ARTechTerm_ARRAY are compatible if one of the following conditions evaluates to true:" message="Compatibility of VariableDataPrototypes or ParameterDataPrototypes typed by composite data types" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1188" label="constr_1188" description="The aggregation of VariableAccess in the role ReceiverComSpec.ReceiverComSpec.replaceWith shall exist if and only if at least one of the following conditions is fulfilled:" message="Existence of ReceiverComSpec.ReceiverComSpec.replaceWith" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1190" label="constr_1190" description="In the case described by TPS_SWCT_01195 only one DataPrototypeMapping.subElementMapping shall exist at the enclosing DataPrototypeMapping." message="Only one mapping for composite to primitive use case" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1191" label="constr_1191" description="After all variability is bound, the content obtained from a limit shall yield a numerical value." message="Value of Limit shall yield a numerical value" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1192" label="constr_1192" description="Similar to constr_1176, a CompuScale where the Identifiable.category of the enclosing CompuMethod is set to ARTechTerm_IDENTICAL is considered compatible to a CompuScale where the Identifiable.category of the enclosing CompuMethod is set to ARTechTerm_RAT_FUNC or ARTechTerm_LINEAR if the following rule applies:" message="Compatibility of ``ARTechTerm_IDENTICAL'' to ``ARTechTerm_RAT_FUNC'' or ``ARTechTerm_LINEAR''" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1193" label="constr_1193" description="For each ModeDeclaration at least one ModeTransition shall reference the ModeDeclaration in the role ModeTransition.enteredMode. This constraint shall apply only if there is at least one ModeTransition defined in the context of the enclosing ModeDeclarationGroup and it shall not apply to the ModeDeclarationGroup.initialMode." message="ModeDeclaration shall be referenced by at least one ModeTransition in the role ModeTransition.enteredMode" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1194" label="constr_1194" description="Two ModeDeclarationGroups contain identical ModeDeclarationGroup.modeTransitions if and only if" message="Identical ModeTransitions" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1195" label="constr_1195" description="For each pair of ModeDeclarations referenced by a SwcModeSwitchEvent with attribute SwcModeSwitchEvent.activation set to ModeActivationKind.onTransition a ModeTransition shall be defined in the corresponding direction (i.e. from ModeTransition.exitedMode to ModeTransition.enteredMode). This constraint shall only apply if the respective ModeDeclarationGroup defines at least one ModeTransition.modeTransition." message="SwcModeSwitchEvent and the definition of ModeTransition" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1196" label="constr_1196" description="If a ReceiverComSpec or SenderComSpec aggregates ReceiverComSpec.networkRepresentation it shall not aggregate ReceiverComSpec.compositeNetworkRepresentation at the same time (and vice versa)." message="Existence of ReceiverComSpec.networkRepresentation vs. ReceiverComSpec.compositeNetworkRepresentation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1197" label="constr_1197" description="If at least one ReceiverComSpec.compositeNetworkRepresentation exists then for each leaf ApplicationCompositeElementDataPrototype of the affected ApplicationCompositeDataType exactly one ReceiverComSpec.compositeNetworkRepresentation shall be defined." message="Existence of ReceiverComSpec.compositeNetworkRepresentation shall be comprehensive" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1200" label="constr_1200" description="The SwDataDefProps.swImplPolicy shall not be set to SwImplPolicyEnum.queued for any SenderReceiverInterface.dataElement owned by a PRPortPrototype." message="Queued communication is not applicable for SenderReceiverInterface.dataElements owned by PRPortPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1201" label="constr_1201" description="The optional attribute NonqueuedReceiverComSpec.initValueshall exist if the enclosing NonqueuedReceiverComSpec is owned by an RPortPrototype." message="NonqueuedReceiverComSpec.initValue shall exist in an RPortPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1202" label="constr_1202" description="For the modeling of AssemblySwConnectors between PortPrototypes typed by a SenderReceiverInterface or NvDataInterface, only the connections documented in Table~table:supportedAssSRNVConnections are supported by AUTOSAR." message="Supported connections by AssemblySwConnector for PortPrototypes typed by a SenderReceiverInterface or NvDataInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1203" label="constr_1203" description="For the modeling of DelegationSwConnectors between PortPrototypes typed by a SenderReceiverInterface or NvDataInterface, only the connections documented in Table~table:supportedDelSRNVConnections are supported by AUTOSAR." message="Supported connections by DelegationSwConnector for PortPrototypes typed by a SenderReceiverInterface or NvDataInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1204" label="constr_1204" description="For the modeling of AssemblySwConnectors between PortPrototypes typed by a ClientServerInterface, ModeSwitchInterface, or TriggerInterface, only the connections documented in Table~table:supportedAssCSMTConnections are supported by AUTOSAR." message="Supported connections by AssemblySwConnector for PortPrototypes typed by a ClientServerInterface, ModeSwitchInterface, or TriggerInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1205" label="constr_1205" description="For the modeling of DelegationSwConnectors between PortPrototypes typed by a ClientServerInterface, ModeSwitchInterface, or TriggerInterface, only the connections documented in Table~table:supportedDelCSMTConnections are supported by AUTOSAR." message="Supported connections by DelegationSwConnector for PortPrototypes typed by a ClientServerInterface, ModeSwitchInterface, or TriggerInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1209" label="constr_1209" description="A configuration that maps severalModeDeclarations representing modes of a mode user to oneModeDeclaration representing a mode of a mode manager shall be rejected." message="Mapping of ModeDeclarations of mode user to ModeDeclaration of mode manager" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1210" label="constr_1210" description="If a ModeDeclarationMapping exists that references a ModeDeclaration representing a mode of the mode manager then ModeDeclarationMappings shall exist that map all modes of the mode manager to modes of the mode user." message="Mapping of ModeDeclarations of mode user to allModeDeclarations of mode manager" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1211" label="constr_1211" description="In PROFILE_01, the applicable range of values for EndToEndDescription.EndToEndDescription.maxNoNewOrRepeatedData and ReceiverComSpec.ReceiverComSpec.maxNoNewOrRepeatedData is&#xA;[0~..~14]." message="Constraints of EndToEndDescription.maxNoNewOrRepeatedData in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1212" label="constr_1212" description="In PROFILE_01, the applicable range of values for EndToEndDescription.EndToEndDescription.syncCounterInit and ReceiverComSpec.ReceiverComSpec.syncCounterInit is&#xA;[0~..~14]." message="Constraints of EndToEndDescription.syncCounterInit in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1213" label="constr_1213" description="In PROFILE_02, the applicable range of values for EndToEndDescription.EndToEndDescription.maxNoNewOrRepeatedData and ReceiverComSpec.ReceiverComSpec.maxNoNewOrRepeatedData is&#xA;[0~..~15]." message="Constraints of EndToEndDescription.maxNoNewOrRepeatedData in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1214" label="constr_1214" description="In PROFILE_02, the applicable range of values for EndToEndDescription.EndToEndDescription.syncCounterInit and ReceiverComSpec.ReceiverComSpec.syncCounterInit is&#xA;[0~..~15]." message="Constraints of EndToEndDescription.syncCounterInit in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1215" label="constr_1215" description="If EndToEndProtection.EndToEndProtection.endToEndProtectionVariablePrototype.EndToEndProtectionVariablePrototype.receiver is identical to the RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.dataElementandRPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.maxNoNewOrRepeatedData is defined then the value of RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.maxNoNewOrRepeatedDatashall be preferred over the value of EndToEndProtection.EndToEndProtection.endToEndProfile.EndToEndDescription.maxNoNewOrRepeatedData." message="Interpretation of attribute EndToEndDescription.maxNoNewOrRepeatedData owned by EndToEndDescription in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1216" label="constr_1216" description="If EndToEndProtection.EndToEndProtection.endToEndProtectionVariablePrototype.EndToEndProtectionVariablePrototype.receiver is identical to the RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.dataElementandRPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.syncCounterInit is defined then the value of RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.syncCounterInitshall be preferred over the value of EndToEndProtection.EndToEndProtection.endToEndProfile.EndToEndDescription.syncCounterInit." message="Interpretation of attribute EndToEndDescription.syncCounterInit owned by EndToEndDescription  in PROFILE_01" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1217" label="constr_1217" description="If EndToEndProtection.EndToEndProtection.endToEndProtectionVariablePrototype.EndToEndProtectionVariablePrototype.receiver is identical to the RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.dataElementandRPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.maxNoNewOrRepeatedData is defined then the value of RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.maxNoNewOrRepeatedDatashall be preferred over the value of EndToEndProtection.EndToEndProtection.endToEndProfile.EndToEndDescription.maxNoNewOrRepeatedData." message="Interpretation of attribute EndToEndDescription.maxNoNewOrRepeatedData owned by EndToEndDescription in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1218" label="constr_1218" description="If EndToEndProtection.EndToEndProtection.endToEndProtectionVariablePrototype.EndToEndProtectionVariablePrototype.receiver is identical to the RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.dataElementandRPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.syncCounterInit is defined then the value of RPortPrototype.RPortPrototype.requiredComSpec.ReceiverComSpec.syncCounterInitshall be preferred over the value of EndToEndProtection.EndToEndProtection.endToEndProfile.EndToEndDescription.syncCounterInit." message="Interpretation of attribute EndToEndDescription.syncCounterInit owned by EndToEndDescription  in PROFILE_02" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1219" label="constr_1219" description="Invalidation of SenderReceiverInterface.dataElements is only supported for SenderReceiverInterface.dataElements where the value of SwDataDefProps.swImplPolicy is not set to SwImplPolicyEnum.queued." message="Invalidation depends on the value of SwDataDefProps.swImplPolicy" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1220" label="constr_1220" description="Two SwBaseTypes are compatible if and only if attributes SwBaseType.baseTypeSize respectively SwBaseType.maxBaseTypeSize, BaseTypeDirectDefinition.byteOrder, BaseTypeDirectDefinition.memAlignment, BaseTypeDirectDefinition.baseTypeEncoding, and BaseTypeDirectDefinition.nativeDeclaration have identical values." message="Compatibility of SwBaseType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1221" label="constr_1221" description="If a DataPrototype is typed by an ApplicationPrimitiveDataType its SwDataDefProps.initValue shall be provided by an ApplicationValueSpecification. If the underlying ApplicationPrimitiveDataType represents an enumeration, the value provided shall match to one of the applicable text values (CompuConstTextContent.vt, CompuScale.shortLabel, CompuScale.symbol) defined by the applicable CompuScales." message="DataPrototype is typed by an ApplicationPrimitiveDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1222" label="constr_1222" description="If the Identifiable.category of an AutosarDataType used to type a DataPrototype is set to STRING the ApplicationValueSpecification used to initialize the DataPrototype shall be of Identifiable.categoryARTechTerm_STRING." message="Identifiable.category of an AutosarDataType used to type a DataPrototype is set to STRING" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1223" label="constr_1223" description="If a DataPrototype is typed by an ApplicationRecordDataType the corresponding SwDataDefProps.initValue shall be provided by a RecordValueSpecification." message="DataPrototype is typed by an ApplicationRecordDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1224" label="constr_1224" description="If a DataPrototype is typed by an ApplicationArrayDataType the corresponding SwDataDefProps.initValue shall be provided by an ArrayValueSpecification or ApplicationRuleBasedValueSpecification." message="DataPrototype is typed by an ApplicationArrayDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1225" label="constr_1225" description="If a DataPrototype is typed by an ImplementationDataType that references a CompuMethod of category ARTechTerm_TEXTTABLE or ARTechTerm_BITFIELD_TEXTTABLE the applicable ValueSpecification shall be a TextValueSpecification. In this case the value provided shall match to one of the applicable text values (CompuConstTextContent.vt, CompuScale.shortLabel, CompuScale.symbol) defined by the applicable CompuScales." message="DataPrototype is typed by an ImplementationDataType that references a CompuMethod of category ARTechTerm_TEXTTABLE or ARTechTerm_BITFIELD_TEXTTABLE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1226" label="constr_1226" description="The value of attribute ExecutableEntityActivationReason.ExecutableEntityActivationReason.bitPosition shall be in the range of 0~..~31." message="Applicable range for ExecutableEntityActivationReason.ExecutableEntityActivationReason.bitPosition" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1227" label="constr_1227" description="The value of attributes ExecutableEntityActivationReason.ExecutableEntityActivationReason.bitPosition and ExecutableEntityActivationReason.ImplementationProps.symbol shall be unique in the context of the enclosing RunnableEntity." message="Value of attribute ExecutableEntityActivationReason.ExecutableEntityActivationReason.bitPosition shall be unique" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1228" label="constr_1228" description="An RTEEvent that is referenced by a WaitPoint in the role WaitPoint.trigger shall not reference ExecutableEntityActivationReason in the role AbstractEvent.activationReasonRepresentation." message="RTEEvent that is referenced by a WaitPoint in the role WaitPoint.trigger shall not reference ExecutableEntityActivationReason" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1229" label="constr_1229" description="An ImplementationDataType qualifies as an ARTechTerm_Integral Primitive Type if and only if either" message="Identifiable.category of ImplementationDataType boils down to ARTechTerm_VALUE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1230" label="constr_1230" description="An ApplicationDataType qualifies as an ARTechTerm_Integral Primitive Type if and only if all of the following conditions apply:" message="ApplicationDataType that qualifies for ARTechTerm_Integral Primitive Type" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1231" label="constr_1231" description="If ConsistencyNeeds are aggregated by a CompositionSwComponentType the associations stereotyped instanceRef may only refer to context and target elements within the context of this CompositionSwComponentType." message="ConsistencyNeeds aggregated by CompositionSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1232" label="constr_1232" description="If ConsistencyNeeds are aggregated by a AtomicSwComponentType the associations stereotyped instanceRef may only refer to context and target elements within the context of this AtomicSwComponentType." message="ConsistencyNeeds aggregated by AtomicSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1233" label="constr_1233" description="An InstantiationTimingEventProps shall only reference TimingEvent in the role InstantiationRTEEventProps.refinedEvent. A reference to other kinds of RTEEvents is not supported." message="InstantiationTimingEventProps shall only reference TimingEvent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1234" label="constr_1234" description="The possible value of RunnableEntity.RunnableEntity.symbol owned by an NvBlockSwComponentType shall only be taken from the set of API names associated with the NvM." message="Value of RunnableEntity.RunnableEntity.symbol" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1237" label="constr_1237" description="All ClientServerOperations referenced by a ClientServerOperationMapping in the role ClientServerOperationMapping.firstOperation shall belong to exactly one ClientServerInterface." message="Scope of mapped ClientServerOperations in the context of a ClientServerOperationMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1238" label="constr_1238" description="All ApplicationErrors referenced by a ClientServerApplicationErrorMapping in the role ClientServerApplicationErrorMapping.firstApplicationError shall belong to exactly one ClientServerInterface." message="Scope of mapped ApplicationErrors in the context of a ClientServerOperationMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1240" label="constr_1240" description="For each ClientServerOperation.argument owned by a ClientServerOperationMapping.ClientServerOperationMapping.firstOperation and&#xA;ClientServerOperationMapping.ClientServerOperationMapping.secondOperation a reference in the role ClientServerOperationMapping.ClientServerOperationMapping.argumentMapping.DataPrototypeMapping.firstDataPrototype or ClientServerOperationMapping.ClientServerOperationMapping.argumentMapping.DataPrototypeMapping.secondDataPrototype shall exist originated by one of the  ClientServerOperationMapping.ClientServerOperationMapping.argumentMappings owned by the mentioned ClientServerOperationMapping." message="Consistency of ArgumentDataPrototypes within the context of a ClientServerOperationMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1241" label="constr_1241" description="ARTechTerm_Compound Primitive Data Types that have set the value of of Identifiable.category other than ARTechTerm_STRING shall not define SwDataDefProps.invalidValue." message="ARTechTerm_Compound Primitive Data Types and SwDataDefProps.invalidValue" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1242" label="constr_1242" description="SwDataDefProps.invalidValue for ApplicationPrimitiveDataType of Identifiable.categoryARTechTerm_STRING (constr_1241 applies) is restricted to be either a compatible ApplicationValueSpecification or a ConstantReference that in turn points to a compatible ApplicationValueSpecification." message="Restriction of SwDataDefProps.invalidValue for ApplicationPrimitiveDataType of Identifiable.categoryARTechTerm_STRING" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1243" label="constr_1243" description="Within the context of one NumericalOrText, either the attribute NumericalOrText.vfor the attribute NumericalOrText.vt shall be defined. The existence of both attributes at the same time is not permitted." message="NumericalOrText shall either define NumericalOrText.vf or NumericalOrText.vt" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1244" label="constr_1244" description="A DataPrototype that is used in an AtomicSwComponentType shall not set DataPrototype.swDataDefProps.SwDataDefProps.additionalNativeTypeQualifier to enum." message="DataPrototypes used in application software shall not be typed by C enums" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1245" label="constr_1245" description="One of the following conditions for the consideration of ModeTransitions for the compatibility of ModeDeclarationGroups shall apply:" message="Consideration of ModeTransitions for the compatibility of ModeDeclarationGroups" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1246" label="constr_1246" description="Within the scope of one ModeDeclarationMappingSet, all ModeDeclarationMapping.firstModes shall belong to one and only one ModeDeclarationGroup and all ModeDeclarationMapping.secondModes shall belong to one and only one otherModeDeclarationGroup" message="Consistency of ModeDeclarationMapping.firstMode and ModeDeclarationMapping.secondMode in the scope of one ModeDeclarationMappingSet" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1247" label="constr_1247" description="If a ModeDeclarationGroupPrototypeMapping.ModeDeclarationGroupPrototypeMapping.modeDeclarationMappingSet exists,&#xA;the ModeDeclarationGroup owning the ModeDeclarationGroup.modeDeclarations referenced in the role ModeDeclarationMapping.firstMode shall be the ModeDeclarationGroupPrototype.type of the ModeDeclarationGroupPrototypeMapping.ModeDeclarationGroupPrototypeMapping.firstModeGroup and&#xA;the ModeDeclarationGroup owning the ModeDeclarationGroup.modeDeclarations referenced in the role ModeDeclarationMapping.secondMode shall be the ModeDeclarationGroupPrototype.type of the ModeDeclarationGroupPrototypeMapping.ModeDeclarationGroupPrototypeMapping.secondModeGroup." message="Consistency of ModeDeclarationMappingSet with&#xA;respect to the referenced ModeDeclarationGroupPrototypeMapping.firstModeGroup and ModeDeclarationGroupPrototypeMapping.secondModeGroup" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1248" label="constr_1248" description="PortPrototypes of different DataInterfaces are considered compatible if and only if" message="Compatibility of PortPrototypes of different DataInterfaces in the context of a PassThroughSwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1249" label="constr_1249" description="PortPrototypes of different ModeSwitchInterfaces are considered compatible if and only if" message="Compatibility of ModeSwitchInterfaces in the context of a PassThroughSwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1250" label="constr_1250" description="PortPrototypes of different ClientServerInterfaces are considered compatible if and only if" message="Compatibility of ClientServerInterfaces in the context of a PassThroughSwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1251" label="constr_1251" description="PortPrototypes of different TriggerInterfaces are considered compatible if and only if" message="Compatibility of PortPrototypes of TriggerInterfaces in the context of a PassThroughSwConnector" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1252" label="constr_1252" description="A PassThroughSwConnector is not allowed if the required outer PortPrototype is directly or indirectly connected to the provided outer PortPrototype without the placement of a SwComponentPrototype typed by an AtomicSwComponentType in the chain of SwConnectors." message="Creation of a loop involving a PassThroughSwConnector is not allowed" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1253" label="constr_1253" description="The allowed multiplicities for attributes of VariationPointProxy depending on the applicable binding time and the value of VariationPointProxy.Identifiable.category are documented in Table~tab:SupportedUsageOfVariationPointProxy." message="Supported usage of VariationPointProxy" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1254" label="constr_1254" description="AUTOSAR does not support the definition of a pointer to a pointer by defining an ImplementationDataType of Identifiable.categoryARTechTerm_DATA_REFERENCE that aggregates SwDataDefProps in the role ImplementationDataType.swDataDefProps that in turn aggregate SwPointerTargetProps in the role SwDataDefProps.swPointerTargetProps with attribute SwPointerTargetProps.targetCategory set to ARTechTerm_DATA_REFERENCE that in turn aggregates SwDataDefProps in the role SwPointerTargetProps.swDataDefProps that  aggregates SwPointerTargetProps in the role SwDataDefProps.swPointerTargetProps that references an ImplementationDataType of Identifiable.category e.g. ARTechTerm_VALUE." message="Definition of a pointer to a pointer" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1255" label="constr_1255" description="If a Unit is referenced from within SwDataDefProps and/or PhysConstrs owned by an ApplicationPrimitiveDataTypes of Identifiable.categoryARTechTerm_BOOLEAN and ARTechTerm_STRING it is required that this Unit represents a meaningless unit, i.e. the referenced Unit.physicalDimension shall not define any exponent value other than 0." message="ApplicationPrimitiveDataTypes of Identifiable.categoryARTechTerm_BOOLEAN and STRING" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1256" label="constr_1256" description="Within the scope of one SwcInternalBehavior, it is not allowed that two or more aggregated RunnableEntitys own either RunnableEntity.dataSendPoints or RunnableEntity.dataWriteAccesss that in turn  point to the identical VariableAccess.accessedVariable.AutosarVariableRef.autosarVariable.VariableInAtomicSWCTypeInstanceRef.targetDataPrototypeif the attribute SenderComSpec.transmissionAcknowledge exists in the context of the SenderComSpec owned by the RunnableEntity.dataSendPoint.VariableAccess.accessedVariable.AutosarVariableRef.autosarVariable.VariableInAtomicSWCTypeInstanceRef.portPrototype (or the respective construct for RunnableEntity.dataWriteAccess) that also refers to said SenderReceiverInterface.dataElement." message="Acknowledgement feedback in n:1 writer case" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1257" label="constr_1257" description="A RunnableEntity referenced by an InitEvent in the role RTEEvent.startOnEvent shall not aggregate a WaitPoint." message="No WaitPoints allowed" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1258" label="constr_1258" description="The value of the attribute ExecutableEntity.ExecutableEntity.minimumStartInterval for a RunnableEntitys that is triggered by an InitEvent shall always be set to 0." message="Value of ExecutableEntity.minimumStartInterval for RunnableEntitys triggered by an InitEvent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1259" label="constr_1259" description="A RunnableEntity referenced by an InitEvent in the role RTEEvent.startOnEvent may aggregate an AsynchronousServerCallPoint but it shall not aggregate an AsynchronousServerCallResultPoint." message="Aggregation of AsynchronousServerCallPointandAsynchronousServerCallResultPoint" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1260" label="constr_1260" description="An InitEvent shall not have a reference to a ModeDeclaration in the role RTEEvent.disabledMode." message="No mode disabling for InitEvents" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1261" label="constr_1261" description="EndToEndDescription.EndToEndDescription.dataIdNibbleOffset shall be used only if&#xA;EndToEndDescription.EndToEndDescription.dataIdMode is set to the value 3 and at the&#xA;same time EndToEndDescription.Identifiable.category is set to PROFILE_01." message="Applicability for EndToEndDescription.EndToEndDescription.dataIdNibbleOffset" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1263" label="constr_1263" description="The optional attribute ModeErrorBehavior.ModeErrorBehavior.defaultModeshall exist if the value of the attribute ModeErrorBehavior.ModeErrorBehavior.errorReactionPolicy is set to ModeErrorReactionPolicyEnum.defaultMode." message="Existence of ModeErrorBehavior.ModeErrorBehavior.defaultMode" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1264" label="constr_1264" description="SwRecordLayoutV.swRecordLayoutVIndex in SwRecordLayoutV cannot be 0 for any data Identifiable.category other than VALUE and VAL_BLK." message="Iteration along output axis is only supported for VALUE and VAL_BLK" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1268" label="constr_1268" description="Within the context of a ClientServerOperationMapping, the value of the argument ArgumentDataPrototype.ArgumentDataPrototype.direction of two mapped ArgumentDataPrototype shall be identical." message="ArgumentDataPrototype.ArgumentDataPrototype.direction shall be preserved in a ClientServerOperationMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1269" label="constr_1269" description="Within the context of a ClientServerOperationMapping, the number of ClientServerOperation.arguments of ClientServerOperationMapping.firstOperation and ClientServerOperationMapping.secondOperation shall be identical." message="Number of ClientServerOperation.arguments shall be preserved in a ClientServerOperationMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1270" label="constr_1270" description="Within the context of a ClientServerOperationMapping, each ClientServerOperation.argument shall only be referenced once in the role DataPrototypeMapping.firstDataPrototype or DataPrototypeMapping.secondDataPrototype." message="ArgumentDataPrototype shall be mapped only once in a ClientServerOperationMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1271" label="constr_1271" description="The initialization of an DataPrototype typed by an ApplicationRecordDataType by means of a RecordValueSpecification shall exactly match the structure of the ApplicationRecordDataType." message="RecordValueSpecification.RecordValueSpecification.elements shall be identical to the number of ApplicationRecordDataType.ApplicationRecordDataType.element" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1272" label="constr_1272" description="The initialization of an DataPrototype typed by an ImplementationDataType of Identifiable.categoryARTechTerm_STRUCTURE by means of a RecordValueSpecification shall exactly match the structure of the ImplementationDataType of Identifiable.categorySTRUCTURE." message="RecordValueSpecification.RecordValueSpecification.elements shall be identical to the number of ImplementationDataType.subElements of ImplementationDataType of Identifiable.categorySTRUCTURE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1273" label="constr_1273" description="The initialization of DataPrototype typed by an ApplicationArrayDataType by means of an ArrayValueSpecification  shall exactly match the structure of the ApplicationArrayDataType regardless of the setting of the attribute ApplicationArrayDataType.ApplicationArrayDataType.element.ApplicationArrayElement.arraySizeSemantics." message="ArrayValueSpecification.ArrayValueSpecification.elements shall be identical to the value of ApplicationArrayDataType.ApplicationArrayDataType.element.ApplicationArrayElement.maxNumberOfElements" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1274" label="constr_1274" description="The initialization of a DataPrototype typed by an ImplementationDataType of Identifiable.categoryARRAY by means of an ArrayValueSpecification shall exactly match the structure of the ImplementationDataType regardless of the setting of the attribute ImplementationDataType.ImplementationDataType.subElement.ImplementationDataTypeElement.arraySizeSemantics." message="ArrayValueSpecification.ArrayValueSpecification.elements shall be identical to the value of ImplementationDataType.ImplementationDataType.subElement.ImplementationDataTypeElement.arraySize of Identifiable.categoryARTechTerm_ARRAY" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1277" label="constr_1277" description="The SwDataDefProps.SwDataDefProps.swImplPolicy of a VariableDataPrototype referenced by a VariableAccess aggregated in the role RunnableEntity.dataReceivePointByValue shall not be set to SwImplPolicyEnum.queued." message="SwDataDefProps.SwDataDefProps.swImplPolicy of a VariableDataPrototype referenced by a VariableAccess aggregated in the role RunnableEntity.dataReceivePointByValue" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1278" label="constr_1278" description="DataConstrs are only compatible if the DataConstr.DataConstr.dataConstrRule.DataConstrRule.physConstrs.PhysConstrs.unit are compatible or neither DataConstr.DataConstr.dataConstrRule.DataConstrRule.physConstrs.PhysConstrs.unit exist." message="PhysConstrs references a Unit" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1279" label="constr_1279" description="If the attribute SwDataDefProps.swImplPolicy is set to SwImplPolicyEnum.queued it is not allowed to have unmapped elements of ApplicationCompositeDataTypes or ImplementationDataTypes of Identifiable.categoryARTechTerm_STRUCTURE or ARTechTerm_ARRAY on the receiver side." message="Unmapped elements of ApplicationCompositeDataTypes or ImplementationDataTypes and the attribute SwDataDefProps.swImplPolicy" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1280" label="constr_1280" description="If elements of ApplicationCompositeDataTypes or ImplementationDataTypes of Identifiable.categoryARTechTerm_STRUCTURE or ARTechTerm_ARRAY are not considered in a SubElementMapping then the enclosing SenderReceiverInterface.dataElement shall have an NonqueuedReceiverComSpec.initValueif the NonqueuedReceiverComSpec is aggregated by an AbstractRequiredPortPrototype." message="Unmapped SenderReceiverInterface.dataElement on the receiver side shall have an initValue" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1281" label="constr_1281" description="If the value of the SwDataDefProps.invalidValue of an ApplicationPrimitiveDataType of Identifiable.categoryVALUE is supposed to be inside the scope of the applicable CompuMethod an ApplicationValueSpecification is used to describe the SwDataDefProps.invalidValue of the ApplicationPrimitiveDataType." message="SwDataDefProps.invalidValue is inside the scope of the SwDataDefProps.compuMethod" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1282" label="constr_1282" description="The aggregation of a RuleBasedValueSpecification or a ReferenceValueSpecification for the definition of a ApplicationPrimitiveDataType.ApplicationPrimitiveDataType.swDataDefProps.SwDataDefProps.invalidValue is not supported." message="Restriction concerning the usage of RuleBasedValueSpecification or a ReferenceValueSpecification for the specification of an SwDataDefProps.invalidValue" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1283" label="constr_1283" description="If the value of the SwDataDefProps.invalidValue of an ApplicationPrimitiveDataType of Identifiable.categoryARTechTerm_VALUE is supposed to be outside the scope of the applicable CompuMethod a NumericalValueSpecification shall be used to describe the SwDataDefProps.invalidValue  of the ApplicationPrimitiveDataType." message="SwDataDefProps.invalidValue is outside the scope of the SwDataDefProps.compuMethod" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1284" label="constr_1284" description="TextValueSpecification shall only be used in the context of an AutosarDataType that references a CompuMethod in the role ImplementationDataType.AutosarDataType.swDataDefPropos.SwDataDefProps.compuMethod of Identifiable.categoryARTechTerm_TEXTTABLE, ARTechTerm_BITFIELD_TEXTTABLE, ARTechTerm_SCALE_LINEAR_AND_TEXTTABLE, and ARTechTerm_SCALE_RATIONAL_AND_TEXTTABLE." message="Limitation of the use of TextValueSpecification" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1285" label="constr_1285" description="The aggregation of AutosarVariableRef aggregated by NvBlockDataMapping in the roles NvBlockDataMapping.writtenNvData, NvBlockDataMapping.writtenReadNvData, or NvBlockDataMapping.readNvData is subject to limitation depending on the applicable subclass of PortPrototype:" message="Applicability of roles vs. PortPrototypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1286" label="constr_1286" description="The value of the attribute ArgumentDataPrototype.ArgumentDataPrototype.serverArgumentImplPolicy shall not be set to ServerArgumentImplPolicyEnum.useVoid for an ArgumentDataPrototype of ArgumentDataPrototype.directionArgumentDirectionEnum.in that is typed by an AutosarDataType that boils down to a primitive C data type (see TPS_SWCT_01565)." message="ArgumentDataPrototype.serverArgumentImplPolicy and ArgumentDataPrototype typed by primitive data types" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1287" label="constr_1287" description="VariableDataPrototypes defined in the context of the SenderReceiverInterface are only compatible if the SenderReceiverInterface.invalidationPolicys have the same value." message="Compatibility of SenderReceiverInterfaces  with respect to SenderReceiverInterface.invalidationPolicy" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1288" label="constr_1288" description="The allowed values per Identifiable.category for DataPrototypes typed by ImplementationDataTypes are documented in table~table:CategoriesImpl4DataProt." message="Allowed Attributes vs. Identifiable.category for DataPrototypes typed by ImplementationDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1289" label="constr_1289" description="The allowed values of Attributes per Identifiable.category for DataPrototypes typed by ApplicationDataTypes are documented in table~table:CategoriesAppl4DataProt." message="Allowed Attributes vs. Identifiable.category for DataPrototypes typed by ApplicationDataTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1290" label="constr_1290" description="Within the context of one PPortPrototype there can only be onePPortComSpec that references a given SenderReceiverInterface.dataElement or ClientServerInterface.clientServerOperation." message="Limitation on the number of PPortComSpecs in the context of one PPortPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1291" label="constr_1291" description="Within the context of one RPortPrototype, there can only be oneRPortComSpec that references a given SenderReceiverInterface.dataElement or ClientServerInterface.clientServerOperation." message="Limitation on the number of RPortComSpecs in the context of one PPortPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1292" label="constr_1292" description="Within the context of one PRPortPrototype, there can only be oneRPortComSpec and onePPortComSpec that references a given SenderReceiverInterface.dataElement or ClientServerInterface.clientServerOperation." message="Limitation on the number of RPortComSpecs/PPortComSpecs in the context of one PRPortPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1295" label="constr_1295" description="A DataPrototype defined in the context of a PortInterface used by an ApplicationSwComponentType or SensorActuatorSwComponentType that is (after potential indirections via ARTechTerm_TYPE_REFERENCE are resolved) either typed by or mapped to an ImplementationDataType of Identifiable.categoryARTechTerm_DATA_REFERENCE shall only be used if either the provider or the requester of the information represents a ServiceSwComponentType, a ComplexDeviceDriverSwComponentType, a ParameterSwComponentType, or an NvBlockSwComponentType, or the EcuAbstractionSwComponentType." message="PortInterfaces and Identifiable.categoryARTechTerm_DATA_REFERENCE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1296" label="constr_1296" description="A VariableDataPrototype shall not be aggregated by SwcInternalBehavior in either the role SwcInternalBehavior.explicitInterRunnableVariable or SwcInternalBehavior.implicitInterRunnableVariable if the VariableDataPrototype (after potential indirections via TYPE_REFERENCE are resolved) is either typed by or mapped to an ImplementationDataType of Identifiable.categoryDATA_REFERENCE." message="DataPrototypes used as SwcInternalBehavior.explicitInterRunnableVariable or SwcInternalBehavior.implicitInterRunnableVariable and Identifiable.categoryDATA_REFERENCE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1297" label="constr_1297" description="The value of the attribute ArgumentDataPrototype.ArgumentDataPrototype.serverArgumentImplPolicy&#xA;shall only  be set to ServerArgumentImplPolicyEnum.useArrayBaseType for an ArgumentDataPrototype that is typed by an AutosarDataType that is (after all ARTechTerm_TYPE_REFERENCEs are resolved) either an ImplementationDataType of Identifiable.categoryARTechTerm_ARRAY or an ApplicationDataType mapped to (after all ARTechTerm_TYPE_REFERENCEs are resolved) an ImplementationDataType of Identifiable.categoryARTechTerm_ARRAY." message="Applicability of ArgumentDataPrototype.serverArgumentImplPolicy set to ServerArgumentImplPolicyEnum.useArrayBaseType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1298" label="constr_1298" description="The attributes ModeDeclarationGroup.ModeDeclarationGroup.onTransitionValue and ModeDeclaration.ModeDeclaration.value (for each ModeDeclaration) shall be set if the Identifiable.category of a ModeDeclarationGroup is set to EXPLICIT_ORDER." message="Existence of attributes if Identifiable.category of a ModeDeclarationGroup is set to EXPLICIT_ORDER" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1299" label="constr_1299" description="The attributes ModeDeclarationGroup.ModeDeclarationGroup.onTransitionValue or ModeDeclaration.ModeDeclaration.value (for any ModeDeclaration) shall not be set if the Identifiable.category of a ModeDeclarationGroup is set to any value other thanEXPLICIT_ORDER." message="Existence of attributes if Identifiable.category of a ModeDeclarationGroup is set to other than EXPLICIT_ORDER" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1300" label="constr_1300" description="The usage of DataPrototypeMapping resp. SubElementMapping does not support the following configuration:" message="Primitive DataPrototype on the provider side shall not be mapped to element of a composite data type on the requester side" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1301" label="constr_1301" description="The usage of a RoleBasedDataTypeAssignment with attribute RoleBasedDataTypeAssignment.role set to the value temporaryRamBlock is only allowed if noRoleBasedDataAssignment defined with attribute RoleBasedDataAssignment.role set to value defaultValue exists in the owning SwcServiceDependency." message="Existence of RoleBasedDataTypeAssignment.RoleBasedDataTypeAssignment.role vs. RoleBasedDataAssignment.RoleBasedDataAssignment.role" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1302" label="constr_1302" description="Data invalidation is only applicable for one of the following cases applicable on the receiving side:" message="Restriction of data invalidation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1303" label="constr_1303" description="If a DataPrototypeMapping aggregates a TextTableMapping then only certain combinations of the value of the applicable CompuMethod.Identifiable.category are supported:" message="Applicability of TextTableMapping depending on the value of CompuMethod.Identifiable.category" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1304" label="constr_1304" description="The attribute TextTableMapping.bitfieldTextTableMaskFirst shall be defined only if the DataPrototypeMapping.firstDataPrototype of a DataPrototypeMapping refers to a CompuMethod that has the value of Identifiable.category set to ARTechTerm_BITFIELD_TEXTTABLE." message="Existence of attribute TextTableMapping.bitfieldTextTableMaskFirst" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1305" label="constr_1305" description="The attribute TextTableMapping.bitfieldTextTableMaskSecond shall be defined only if the DataPrototypeMapping.secondDataPrototype of a DataPrototypeMapping refers to a CompuMethod that has the value of Identifiable.category set to ARTechTerm_BITFIELD_TEXTTABLE." message="Existence of attribute TextTableMapping.bitfieldTextTableMaskSecond" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1306" label="constr_1306" description="For any TextTableMapping where both DataPrototypeMapping.firstDataPrototype and DataPrototypeMapping.secondDataPrototype refer to CompuMethods that have the value of Identifiable.category set to ARTechTerm_BITFIELD_TEXTTABLEand where the attribute TextTableMapping.TextTableMapping.valuePair exists the value of attribute TextTableMapping.TextTableMapping.identicalMapping shall  be set to false." message="Limitation of TextTableMapping for CompuMethods that have the value of Identifiable.category set to ARTechTerm_BITFIELD_TEXTTABLE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1307" label="constr_1307" description="If a TextTableMapping element defines bit masks as TextTableMapping.bitfieldTextTableMaskFirst or TextTableMapping.bitfieldTextTableMaskSecond then all contained TextTableMapping.TextTableMapping.valuePair.TextTableValuePair.firstValues as well as all TextTableMapping.TextTableMapping.valuePair.TextTableValuePair.secondValues shall not specify a value that would be ruled out when - depending on the given value of TextTableMapping.TextTableMapping.mappingDirection - the relevant bit mask is applied." message="Consistency of values and masks in TextTableMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1308" label="constr_1308" description="The attribute NvBlockNeeds.NvBlockNeeds.cyclicWritingPeriod shall exist if and only if the attribute NvBlockNeeds.NvBlockNeeds.storeCyclic exists and its value is set to true." message="Existence of NvBlockNeeds.NvBlockNeeds.cyclicWritingPeriod" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1309" label="constr_1309" description="The attribute NvBlockDescriptor.NvBlockDescriptor.timingEvent shall exist if and only if the NvBlockDescriptor.NvBlockDescriptor.nvBlockNeeds.NvBlockNeeds.storeCyclic exists and is set to the value true." message="Existence of NvBlockDescriptor.NvBlockDescriptor.timingEvent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1310" label="constr_1310" description="If in the context of an ApplicationSwComponentType the attribute SwcServiceDependency.SwcServiceDependency.serviceNeeds is implemented by an NvBlockNeeds then the following attributes" message="Existence of attributes of meta-class NvBlockNeeds" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1311" label="constr_1311" description="Any given list of values stored in the attributes MemorySection.MemorySection.option or SwAddrMethod.SwAddrMethod.option shall at most include a single value out of the following list:" message="Appearance of safety-related possible values of MemorySection.MemorySection.option or SwAddrMethod.SwAddrMethod.option according to TPS_SWCT_01456" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1312" label="constr_1312" description="PortPrototypes typed by a ParameterInterface can either be PPortPrototypes or RPortPrototypes. The usage of PRPortPrototypes that are typed by a ParameterInterface is not supported." message="PortPrototypes typed by a ParameterInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1313" label="constr_1313" description="If a DataPrototypeMapping contains one or more TextTableMapping(s) where the DataPrototype on the sender side refers to a CompuMethod of Identifiable.categoryARTechTerm_BITFIELD_TEXTTABLE then all DataPrototypeMapping.DataPrototypeMapping.textTableMapping shall aggregate a collection of  TextTableMapping.TextTableMapping.valuePair where each possible value of the sender bit maskDepending on the applicable case this means either TextTableMapping.bitfieldTextTableMaskFirst (applies if TPS_SWCT_01163 is in place) or TextTableMapping.bitfieldTextTableMaskSecond for the case of TPS_SWCT_01164. is represented by exactly one TextTableValuePair.TextTableValuePair.firstValue (TPS_SWCT_01163) resp. TextTableValuePair.TextTableValuePair.secondValue (TPS_SWCT_01164)." message="Completeness of TextTableMapping for the values of a given bit mask on the sender side" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1314" label="constr_1314" description="If the ApplicationArrayDataType.dynamicArraySizeProfile of ApplicationArrayDataType is set to ARTechTerm_VSA_LINEAR, the contained ApplicationArrayElement shall fulfill all of the following conditions:" message="Profile ARTechTerm_VSA_LINEAR for ApplicationArrayDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1315" label="constr_1315" description="If the ApplicationArrayDataType.dynamicArraySizeProfile of ApplicationArrayDataType is set to ARTechTerm_VSA_SQUARE, the contained ApplicationArrayElement shall fulfill all of the following conditions:" message="Profile ARTechTerm_VSA_SQUARE for ApplicationArrayDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1316" label="constr_1316" description="If the ApplicationArrayDataType.dynamicArraySizeProfile of ApplicationArrayDataType is set to ARTechTerm_VSA_RECTANGULAR the contained ApplicationArrayElement shall fulfill all of the following conditions:" message="Profile ARTechTerm_VSA_RECTANGULAR for ApplicationArrayDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1317" label="constr_1317" description="If the ApplicationArrayDataType.dynamicArraySizeProfile of ApplicationArrayDataType is set to ARTechTerm_VSA_FULLY_FLEXIBLE, the contained ApplicationArrayElement shall fulfill all of the following conditions:" message="Profile ARTechTerm_VSA_FULLY_FLEXIBLE for ApplicationArrayDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1318" label="constr_1318" description="If the ImplementationDataType.dynamicArraySizeProfile of ImplementationDataType is set to ARTechTerm_VSA_LINEAR, the contained ImplementationDataTypeElement shall fulfill all of the following conditions:" message="Profile ARTechTerm_VSA_LINEAR for ImplementationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1319" label="constr_1319" description="If the ImplementationDataType.dynamicArraySizeProfile of ImplementationDataType is set to ARTechTerm_VSA_SQUARE, the contained ImplementationDataTypeElement shall fulfill all of the following conditions:" message="Profile ARTechTerm_VSA_SQUARE for ImplementationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1320" label="constr_1320" description="If the ImplementationDataType.dynamicArraySizeProfile of ImplementationDataType is set to ARTechTerm_VSA_RECTANGULAR, the contained ImplementationDataTypeElement shall have an ImplementationDataTypeElement that fulfills all of the following conditions:" message="Profile ARTechTerm_VSA_RECTANGULAR for ImplementationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1321" label="constr_1321" description="If the ImplementationDataType.dynamicArraySizeProfile of ImplementationDataType is set to ARTechTerm_VSA_FULLY_FLEXIBLE, the contained ImplementationDataTypeElement shall have an ImplementationDataTypeElement that fulfills all of the following conditions:" message="Profile ARTechTerm_VSA_FULLY_FLEXIBLE for ImplementationDataType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1322" label="constr_1322" description="If the ImplementationDataType is mapped to an ApplicationArrayDataType where the attribute ApplicationArrayDataType.ApplicationArrayDataType.dynamicArraySizeProfile exists, the ImplementationDataType shall have the Identifiable.categoryARTechTerm_STRUCTURE." message="ARTechTerm_Size Indicator for undefined ApplicationDataType.dynamicArraySizeProfile" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1323" label="constr_1323" description="The attribute ReceiverComSpec.ReceiverComSpec.usesEndToEndProtection shall be set to false for all ReceiverComSpec that aggregate EndToEndTransformationDescription in the role ReceiverComSpec.transformationComSpecProps." message="Applicability of attribute ReceiverComSpec.ReceiverComSpec.usesEndToEndProtection" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1363" label="constr_1363" description="if DiagnosticValueNeeds is aggregated by a SwcServiceDependency in the role SwcServiceDependency.serviceNeeds then the attributes" message="Existence of attributes of DiagnosticValueNeeds" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1364" label="constr_1364" description="if DiagnosticIoControlNeeds is aggregated by a SwcServiceDependency in the role SwcServiceDependency.serviceNeeds then the attributes" message="Existence of attributes of DiagnosticIoControlNeeds" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1375" label="constr_1375" description="The existence of attributes of CompuMethod and related meta-classes depending on the value of the Identifiable.category shall follow the restrictions documented in Table~table:CategoriesCompuMethod." message="Existence of attributes of CompuMethod and related meta-classes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1381" label="constr_1381" description="Any given list of values stored in the attributes MemorySection.MemorySection.option or SwAddrMethod.SwAddrMethod.option shall at most include a single value out of the following list:" message="Appearance of core-related possible values of MemorySection.MemorySection.option or SwAddrMethod.SwAddrMethod.option according to TPS_SWCT_01456" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1382" label="constr_1382" description="In any given AUTOSAR model, the aggregations SwVariableRefProxy.SwVariableRefProxy.autosarVariable and SwVariableRefProxy.SwVariableRefProxy.mcDataInstanceVar shall never exist at the same time." message="Mutually exclusive existence of attributes SwVariableRefProxy.SwVariableRefProxy.autosarVariable vs. SwVariableRefProxy.SwVariableRefProxy.mcDataInstanceVar" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_1383" label="constr_1383" description="The existence of ImplementationDataType.ImplementationDataType.swDataDefProps.SwDataDefProps.compuMethod and ImplementationDataType.ImplementationDataType.swDataDefProps.SwDataDefProps.dataConstr for ImplementationDataTypes of Identifiable.categoryARTechTerm_TYPE_REFERENCE is only allowed if the respective ImplementationDataType, after all type references are resolved, ends up in an ImplementationDataType of Identifiable.categoryARTechTerm_VALUE." message="Existence of CompuMethod and DataConstr for ImplementationDataTypes of Identifiable.categoryARTechTerm_TYPE_REFERENCE" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2000" label="constr_2000" description="The ClientServerOperations are considered compatible if the number of arguments (which can be ArgumentDataPrototypes or related PortDefinedArgumentValues) is equal and the corresponding arguments (i.e. first argument on both sides, second argument on both sides, etc.) are compatible." message="Compatibility of ClientServerOperations triggering the same RunnableEntity" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2002" label="constr_2002" description="A VariableAccess in the role RunnableEntity.dataReadAccess shall refer to an RPortPrototype or PRPortPrototype that is typed by either a SenderReceiverInterface or a NvDataInterface." message="Referenced VariableDataPrototype from AutosarVariableRef of VariableAccess in role RunnableEntity.dataReadAccess" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2003" label="constr_2003" description="A VariableAccess in the role RunnableEntity.dataWriteAccess shall refer to a PPortPrototype or PRPortPrototype that is typed by either a SenderReceiverInterface or a NvDataInterface." message="Referenced VariableDataPrototype from AutosarVariableRef of VariableAccess in role RunnableEntity.dataWriteAccess" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2004" label="constr_2004" description="A VariableAccess in the role RunnableEntity.dataSendPoint shall refer to a PPortPrototype or PRPortPrototype that is typed by either a SenderReceiverInterface or a NvDataInterface." message="Referenced VariableDataPrototype from AutosarVariableRef of VariableAccess in role RunnableEntity.dataSendPoint" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2005" label="constr_2005" description="A VariableAccess in the role RunnableEntity.dataReceivePointByValue or RunnableEntity.dataReceivePointByArgument shall refer to an RPortPrototype or PRPortPrototype that is typed by either a SenderReceiverInterface or an NvDataInterface." message="Referenced VariableDataPrototype from AutosarVariableRef of VariableAccess in role RunnableEntity.dataReceivePointByValue or RunnableEntity.dataReceivePointByArgument" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2006" label="constr_2006" description="The AsynchronousServerCallPoint has to be referenced by exactly one AsynchronousServerCallResultPoint. This means that only the RunnableEntity with this AsynchronousServerCallResultPoint can fetch the result of the asynchronous server invocation of this particular AsynchronousServerCallPoint." message="Number of AsynchronousServerCallResultPoint referencing to one AsynchronousServerCallPoint" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2007" label="constr_2007" description="All PerInstanceMemorys of the same SwcInternalBehavior with identical PerInstanceMemory.type attribute shall define an identical PerInstanceMemory.typeDefinition attribute as well." message="Consistency of PerInstanceMemory.typeDefinition attribute" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2009" label="constr_2009" description="With respect to external communication, NvBlockSwComponentType is limited to the definition of the following kinds of PortPrototype:" message="Supported kinds of PortPrototypes of a NvBlockSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2010" label="constr_2010" description="The existence of SwConnectors that refer to PortPrototypes belonging to SwComponentPrototypes where both are typed by NvBlockSwComponentType is not permitted." message="Connections between SwComponentPrototypes of&#xA;type NvBlockSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2011" label="constr_2011" description="The nv dataPortPrototypes of the SwComponentPrototype typed by an NvBlockSwComponentType are either connected with PortPrototypes typed by NvDataInterfaces or SenderReceiverInterfaces of other AtomicSwComponentType." message="Connections between SwComponentPrototypes typed by NvBlockSwComponentType and SwComponentPrototypes typed by other AtomicSwComponentTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2012" label="constr_2012" description="The NvBlockDescriptor.ramBlock and the NvBlockDescriptor.romBlock shall have compatible ImplementationDataTypes to ensure, that the NVRAM Block default values in the ROM Block can be copied into the RAM Block." message="Compatibility of ImplementationDataTypes used for NvBlockDescriptor.ramBlock and NvBlockDescriptor.romBlock" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2013" label="constr_2013" description="The NvBlockDataMapping is only valid if the ImplementationDataType of the referenced VariableDataPrototype or ImplementationDataTypeElement in the role NvBlockDataMapping.nvRamBlockElement is compatible to the ImplementationDataType used to type the VariableDataPrototype aggregated by NvBlockDataMapping in the role NvBlockDataMapping.writtenNvData, NvBlockDataMapping.writtenReadNvData, or NvBlockDataMapping.readNvData." message="Compatibility of ImplementationDataTypes for NvBlockDataMapping" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2014" label="constr_2014" description="The RoleBasedPortAssignment.role has to be set to a valid name of the Standardized AUTOSAR Interface used for the NVRAM Manager e.g. NvMNotifyJobFinished or NvMNotifyInitBlock." message="Limitation of RoleBasedPortAssignment.RoleBasedPortAssignment.role in NvBlockDescriptors" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2015" label="constr_2015" description="The SwcInternalBehavior of a NvBlockSwComponentType is only permitted to define" message="Limitation of SwcInternalBehavior of a NvBlockSwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2016" label="constr_2016" description="A connection between PortPrototypes belonging to SwComponentPrototypes where both are typed by ServiceProxySwComponentType is not permitted." message="Connections between SwComponentPrototypes of&#xA;type ServiceProxySwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2017" label="constr_2017" description="ServiceProxySwComponentType is only permitted to define" message="Ports of ServiceProxySwComponentTypes" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2018" label="constr_2018" description="For remote communication, ServiceProxySwComponentType can have only RPortPrototypes typed by SenderReceiverInterfaces in a 1:n communication scenario." message="Supported remote communication of a ServiceProxySwComponentType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2019" label="constr_2019" description="In the case of ServiceSwComponentType, all aggregated PortPrototypes need to have an isOfType relationship to a PortInterface which has its PortInterface.isService attribute set to true. The exceptions described in TPS_SWCT_01572, TPS_SWCT_01579 and TPS_SWCT_01580 apply." message="ServiceSwComponentType shall have service ports only" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2020" label="constr_2020" description="The SwDataDefProps.swImplPolicy of the VariableDataPrototype referenced by a VariableAccess in role RunnableEntity.dataReadAccess shall not be set to SwImplPolicyEnum.queued." message="RunnableEntity.dataReadAccess can not be used for queued communication" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2021" label="constr_2021" description="A WaitPoint referencing a DataReceivedEvent is permitted if and only if the SwDataDefProps.swImplPolicy of the VariableDataPrototype referenced by this DataReceivedEvent is set to SwImplPolicyEnum.queued." message="WaitPoint referencing a DataReceivedEvent can not be used for non-queued communication" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2022" label="constr_2022" description="A ClientServerOperation of a particular RPortPrototype shall be mutually exclusive referenced by either a SynchronousServerCallPoints or an AsynchronousServerCallPoints." message="Mutually exclusive use of SynchronousServerCallPoints and AsynchronousServerCallPoints" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2023" label="constr_2023" description="The ServerCallPoint.timeout values of all ServerCallPoints referencing the same instance of ClientServerOperation in a RPortPrototype shall be identical." message="Consistency of ServerCallPoint.timeout values" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2024" label="constr_2024" description="The definition of a PortAPIOption with PortAPIOption.enableTakeAddress set to true is only permitted for software-components where the attribute SwcInternalBehavior.SwcInternalBehavior.supportsMultipleInstantiation is set to false." message="PortAPIOption.enableTakeAddress is restricted to single instantiation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2026" label="constr_2026" description="A VariableDataPrototype in the AutosarVariableRef.localVariable reference needs to be owned by the same SwcInternalBehavior as this RunnableEntity belongs to, and the referenced VariableDataPrototype has to be defined in the role SwcInternalBehavior.implicitInterRunnableVariable or SwcInternalBehavior.explicitInterRunnableVariable." message="Referenced VariableDataPrototype from AutosarVariableRef of VariableAccess in role RunnableEntity.writtenLocalVariable and RunnableEntity.readLocalVariable" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2027" label="constr_2027" description="A PortPrototype that is referenced by a SwcServiceDependency via RoleBasedPortAssignment.assignedPort shall be typed by a PortInterface that has PortInterface.isService set to true." message="SwcServiceDependency shall be defined for service ports only" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2028" label="constr_2028" description="The InternalBehavior.staticMemory is only supported if the attribute SwcInternalBehavior.supportsMultipleInstantiation of the owning SwcInternalBehavior is set to false" message="InternalBehavior.staticMemory is restricted to single instantiation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2029" label="constr_2029" description="The Referrable.shortName of a VariableDataPrototype in role InternalBehavior.staticMemory or a ParameterDataPrototype in role InternalBehavior.constantMemory has to be equal with the 'C' identifier of the described variable resp. constant." message="Referrable.shortName of InternalBehavior.constantMemory and InternalBehavior.staticMemory" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2030" label="constr_2030" description="The WaitPoint which references a AsynchronousServerCallReturnsEvent and the  AsynchronousServerCallResultPoint which is referenced by this AsynchronousServerCallReturnsEvent shall be aggregated by the same RunnableEntity." message="AsynchronousServerCallResultPoint combined with WaitPoint shall belong to the same RunnableEntity" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2031" label="constr_2031" description="The value of the attribute period of TimingEvent shall be greater than 0." message="Period of TimingEvent shall be greater than 0" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2033" label="constr_2033" description="The WaitPoint.timeout value of a WaitPoint associated with a DataSendCompletedEvent shall have the same value as the corresponding value of TransmissionAcknowledgementRequest.TransmissionAcknowledgementRequest.timeout." message="Timeout of DataSendCompletedEvent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2034" label="constr_2034" description="RunnableEntitys and BswSchedulableEntitys shall not reference a SwAddrMethod which attribute SwAddrMethod.memoryAllocationKeywordPolicy is set to MemoryAllocationKeywordPolicyType.addrMethodShortNameAndAlignment." message="SwAddrMethod referenced by RunnableEntitys or BswSchedulableEntitys" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2035" label="constr_2035" description="The overriding SwDataDefProps.swImplPolicy attribute value of a VariableDataPrototype in SenderReceiverInterface shall be SwImplPolicyEnum.standard, SwImplPolicyEnum.queued or SwImplPolicyEnum.measurementPoint." message="SwDataDefProps.swImplPolicy for VariableDataPrototype in SenderReceiverInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2036" label="constr_2036" description="The overriding SwDataDefProps.swImplPolicy attribute value of a VariableDataPrototype in NvDataInterface shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for VariableDataPrototype in NvDataInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2037" label="constr_2037" description="The overriding SwDataDefProps.swImplPolicy attribute value of a VariableDataPrototype in the&#xA;role NvBlockDescriptor.ramBlock shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for VariableDataPrototype in the&#xA;role NvBlockDescriptor.ramBlock" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2038" label="constr_2038" description="The overriding SwDataDefProps.swImplPolicy attribute value of a VariableDataPrototype in the&#xA;role SwcInternalBehavior.implicitInterRunnableVariable shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for VariableDataPrototype in the&#xA;role SwcInternalBehavior.implicitInterRunnableVariable" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2039" label="constr_2039" description="The overriding SwDataDefProps.swImplPolicy attribute value of a VariableDataPrototype in the&#xA;role SwcInternalBehavior.explicitInterRunnableVariable shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for VariableDataPrototype in the&#xA;role SwcInternalBehavior.explicitInterRunnableVariable" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2040" label="constr_2040" description="The overriding SwDataDefProps.swImplPolicy attribute value of a VariableDataPrototype in the&#xA;role SwcInternalBehavior.arTypedPerInstanceMemory shall be SwImplPolicyEnum.standard or SwImplPolicyEnum.measurementPoint." message="SwDataDefProps.swImplPolicy for VariableDataPrototype in the&#xA;role SwcInternalBehavior.arTypedPerInstanceMemory" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2041" label="constr_2041" description="The overriding SwDataDefProps.swImplPolicy attribute value of a VariableDataPrototype in the&#xA;role SwcInternalBehavior.staticMemory shall be SwImplPolicyEnum.standard, SwImplPolicyEnum.measurementPoint or SwImplPolicyEnum.message." message="SwDataDefProps.swImplPolicy for VariableDataPrototype in the&#xA;role SwcInternalBehavior.staticMemory" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2042" label="constr_2042" description="The overriding SwDataDefProps.swImplPolicy attribute value of a ParameterDataPrototype in ParameterInterface shall be SwImplPolicyEnum.standard, SwImplPolicyEnum.const or SwImplPolicyEnum.fixed." message="SwDataDefProps.swImplPolicy for ParameterDataPrototype in ParameterInterface" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2043" label="constr_2043" description="The overriding SwDataDefProps.swImplPolicy attribute value of a ParameterDataPrototype in the&#xA;role NvBlockDescriptor.romBlock shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for ParameterDataPrototype in the&#xA;role SwcInternalBehavior.staticMemory" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2044" label="constr_2044" description="The overriding SwDataDefProps.swImplPolicy attribute value of a ParameterDataPrototype in the&#xA;role SwcInternalBehavior.sharedParameter shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for ParameterDataPrototype in the&#xA;role SwcInternalBehavior.sharedParameter" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2045" label="constr_2045" description="The overriding SwDataDefProps.swImplPolicy attribute value of a ParameterDataPrototype in the&#xA;role SwcInternalBehavior.sharedParameter shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for ParameterDataPrototype in the&#xA;role SwcInternalBehavior.perInstanceParameter" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2046" label="constr_2046" description="The overriding SwDataDefProps.swImplPolicy attribute value of a ParameterDataPrototype in the&#xA;role SwcInternalBehavior.sharedParameter shall be SwImplPolicyEnum.standard, SwImplPolicyEnum.const or SwImplPolicyEnum.fixed." message="SwDataDefProps.swImplPolicy for ParameterDataPrototype in the&#xA;role SwcInternalBehavior.constantMemory" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2047" label="constr_2047" description="The overriding SwDataDefProps.swImplPolicy attribute value of a ArgumentDataPrototype shall be SwImplPolicyEnum.standard." message="SwDataDefProps.swImplPolicy for ArgumentDataPrototype" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2048" label="constr_2048" description="The overriding SwDataDefProps.swImplPolicy attribute value of a SwServiceArg shall be SwImplPolicyEnum.standard or SwImplPolicyEnum.const." message="SwDataDefProps.swImplPolicy for SwServiceArg" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2049" label="constr_2049" description="A software component is not allowed to type multiple PortPrototypes with ModeSwitchInterfaces where the contained ModeDeclarationGroupPrototypes are referencing ModeDeclarationGroups with identical Referrable.shortNames but different ModeDeclarations." message="Different ModeDeclarationGroups shall have different Referrable.shortNames." categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2050" label="constr_2050" description="If the attribute ApplicationValueSpecification.swAxisCont is defined for an ApplicationValueSpecification the SwAxisCont shall define one SwAxisCont.swAxisIndex value and one SwAxisCont.swArraysize value per dimension, even in the case when the owning ApplicationValueSpecification defines only the content of a single dimensional object like a CURVE." message="Mandatory information of a SwAxisCont" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2051" label="constr_2051" description="If the attribute ApplicationValueSpecification.swValueCont is defined for an ApplicationValueSpecification the SwValueCont shall always define the attribute SwValueCont.swArraysize if the ApplicationValueSpecification is of Identifiable.categoryARTechTerm_CURVE, ARTechTerm_MAP, ARTechTerm_CUBOID, ARTechTerm_CUBE_4, ARTechTerm_CUBE_5, ARTechTerm_COM_AXIS, ARTechTerm_RES_AXIS, ARTechTerm_CURVE_AXIS, or ARTechTerm_VAL_BLK." message="Mandatory information of a SwValueCont" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2052" label="constr_2052" description="SwAxisCont.swValuesPhys shall define as many numbers of values as the SwValueCont.swArraysize defines. In other words, in the bound model the number of descendants (SwValues.v, or SwValues.vf, or SwValues.vt, or SwValues.vtf) shall be identical to the number of elements of the related DataPrototype typed by an ApplicationPrimitiveDataType." message="Values of SwValueCont.swArraySize and the number of values provided by SwAxisCont.swValuesPhys shall be consistent." categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2053" label="constr_2053" description="If a SwcServiceDependency with a ObdRatioServiceNeeds is defined and the attribute ObdRatioServiceNeeds.connectionType of the contained ObdRatioServiceNeeds is set to ObdRatioConnectionKindEnum.ObdRatioConnectionKindEnum.apiUse a RoleBasedPortAssignment with the  RoleBasedPortAssignment.role value IUMPRNumerator shall be defined." message="Consistency between RoleBasedPortAssignment.roleIUMPRNumerator and ObdRatioServiceNeeds.ObdRatioServiceNeeds.connectionType" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2054" label="constr_2054" description="The System referenced in the role RapidPrototypingScenario.rptSystem shall be of Identifiable.categoryRPT_SYSTEM." message="Valid targets of RapidPrototypingScenario.rptSystem" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2055" label="constr_2055" description="Depending on the Identifiable.category value the targets of RptContainer.byPassPoint and RptContainer.rptHook references are restricted according table table:Category_of_RptContainers." message="Valid targets of RptContainer.byPassPoint and RptContainer.rptHook reference" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2056" label="constr_2056" description="Within one RapidPrototypingScenario&#xA;all RapidPrototypingScenario.rptSystem references shall point to instances in one and only&#xA;one System and if existent all RptHook.rptArHook shall point to instances in one other and only one other System." message="Consistency of RapidPrototypingScenario with&#xA;respect to RapidPrototypingScenario.rptSystem and RptHook.rptArHook references" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2057" label="constr_2057" description="If the attribute ApplicationRuleBasedValueSpecification.swAxisCont is defined for an ApplicationRuleBasedValueSpecification the RuleBasedAxisCont shall define one RuleBasedAxisCont.swAxisIndex value and one RuleBasedAxisCont.swArraysize value per dimension, even in the case when the owning ApplicationRuleBasedValueSpecification defines only the content of a single dimensional object like a ARTechTerm_CURVE." message="Mandatory information of a RuleBasedAxisCont" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2058" label="constr_2058" description="If the attribute ApplicationRuleBasedValueSpecification.swValueCont is defined for an ApplicationRuleBasedValueSpecification the RuleBasedValueCont shall define always the attribute RuleBasedValueCont.swArraysize if the ApplicationRuleBasedValueSpecification is of Identifiable.categoryARTechTerm_CURVE, ARTechTerm_MAP, ARTechTerm_CUBOID, ARTechTerm_CUBE_4, ARTechTerm_CUBE_5, ARTechTerm_COM_AXIS, ARTechTerm_RES_AXIS, ARTechTerm_CURVE_AXIS, ARTechTerm_VAL_BLK or ARTechTerm_ARRAY." message="Mandatory information of a RuleBasedValueCont" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2535" label="constr_2535" description="Except for the specifically described cases where constr_1173 applies the target of AutosarParameterRef.autosarParameter (which in fact is an instance ref) in AutosarParameterRef shall either be or be nested in ParameterDataPrototype. This means that the target shall either be a ParameterDataPrototype or an ApplicationCompositeElementDataPrototype that in turn is owned by a ParameterDataPrototype." message="Target of an AutosarParameterRef.autosarParameter in AutosarParameterRef shall refer to a parameter" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2536" label="constr_2536" description="The target of AutosarVariableRef.autosarVariable (which in fact is an instance ref) in AutosarVariableRef shall either be or be nested in VariableDataPrototype. This means that the target shall either be a VariableDataPrototype or an ApplicationCompositeElementDataPrototype that in turn is owned by a VariableDataPrototype." message="Target of an AutosarVariableRef.autosarVariable in AutosarVariableRef shall refer to a variable" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2544" label="constr_2544" description="The limits of ApplicationDataType shall be inside of the definition range of the CompuMethod" message="Limits need to be consistent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2545" label="constr_2545" description="The SwDataDefProps.invalidValue shall be in the range of the ImplementationDataType." message="SwDataDefProps.invalidValue shall fit in the specified ranges" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2548" label="constr_2548" description="The values compliant to SwDataDefProps.SwDataDefProps.dataConstr shall be also be&#xA;          &#x9;compliant to SwDataDefProps.SwDataDefProps.valueAxisDataType.AutosarDataType.swDataDefProps.SwDataDefProps.dataConstr." message="Data constraint of value axis shall match" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2549" label="constr_2549" message="Units of input axis shall be consistent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2550" label="constr_2550" message="Units of value axis shall be consistent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_2561" label="constr_2561" description="DataConstrRule.DataConstrRule.constrLevel is limited to" message="Application of DataConstrRule.DataConstrRule.constrLevel" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4000" label="constr_4000" description="Ports with ModeSwitchInterfaces cannot be connected across ECU boundaries." message="Local communication of mode switches" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4002" label="constr_4002" description="Within one DataTypeMappingSet, a ModeDeclarationGroup shall not be mapped to different ImplementationDataTypes." message="Unambiguous mapping of modes to data types" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4003" label="constr_4003" description="If the value of SwcModeSwitchEvent.SwcModeSwitchEvent.activation is ModeActivationKind.onTransition then SwcModeSwitchEvent shall refer to two different ModeDeclarations belonging to the same instance of ModeDeclarationGroup." message="Semantics of SwcModeSwitchEvent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4004" label="constr_4004" description="A SenderReceiverAnnotation shall only be aggregated by a PortPrototype typed by a SenderReceiverInterface." message="Context of SenderReceiverAnnotation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4005" label="constr_4005" description="A ClientServerAnnotation shall only be aggregated by a PortPrototype typed by a ClientServerInterface." message="Context of ClientServerAnnotation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4006" label="constr_4006" description="A ParameterPortAnnotation shall only be aggregated by a PPortPrototype owned by a ParameterSwComponentType." message="Context of ParameterPortAnnotation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4007" label="constr_4007" description="A ModePortAnnotation shall only be aggregated by a PortPrototype typed by a ModeSwitchInterface." message="Context of ModePortAnnotation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4008" label="constr_4008" description="A TriggerPortAnnotation shall only be aggregated by a PortPrototype typed by a TriggerInterface." message="Context of TriggerPortAnnotation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4009" label="constr_4009" description="An NvDataPortAnnotation shall only be aggregated by a PortPrototype typed by an NvDataInterface." message="Context of NvDataPortAnnotation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4010" label="constr_4010" description="A DelegatedPortAnnotation shall only be aggregated by a PortPrototype aggregated by a CompositionSwComponentType." message="Context of DelegatedPortAnnotation" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4012" label="constr_4012" description="The timeout value of a WaitPoint associated with a  ModeSwitchedAckEvent shall be equal to the corresponding ModeSwitchedAckRequest.ModeSwitchedAckRequest.timeout." message="Timeout of ModeSwitchedAckEvent" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4035" label="constr_4035" description="An instance of ValueSpecification which is used to assign a value to a software object typed by an AutosarDataType shall fit into this AutosarDataType without losing information." message="ValueSpecification shall fit into data type" categories="SoftwareComponentTemplate"/>
  <constraints id="constr_4082" label="constr_4082" description="The optional attribute ExecutableEntity.reentrancyLevel shall not be set for a RunnableEntity. This attribute would define more specific reentrancy features than the mandatory attribute RunnableEntity.canBeInvokedConcurrently. These features are currently only supported for Basic Software." message="RunnableEntity.ExecutableEntity.reentrancyLevel shall not be set." categories="SoftwareComponentTemplate"/>
</checkcatalog:Catalog>
